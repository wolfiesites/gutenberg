"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[7875],{"./packages/components/src/button/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{zx:function(){return Button}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/deprecated/build-module/index.js"),_wordpress_compose__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),_tooltip__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/components/src/tooltip/index.tsx"),_icon__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/components/src/icon/index.tsx"),_visually_hidden__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/components/src/visually-hidden/component.tsx"),_popover_utils__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/components/src/popover/utils.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const disabledEventsOnDisabledButton=["onMouseDown","onClick"];function UnforwardedButton(props,ref){const{__next40pxDefaultSize:__next40pxDefaultSize,isBusy:isBusy,isDestructive:isDestructive,className:className,disabled:disabled,icon:icon,iconPosition:iconPosition="left",iconSize:iconSize,showTooltip:showTooltip,tooltipPosition:tooltipPosition,shortcut:shortcut,label:label,children:children,size:size="default",text:text,variant:variant,__experimentalIsFocusable:isFocusable,describedBy:describedBy,...buttonOrAnchorProps}=function useDeprecatedProps({isDefault:isDefault,isPrimary:isPrimary,isSecondary:isSecondary,isTertiary:isTertiary,isLink:isLink,isPressed:isPressed,isSmall:isSmall,size:size,variant:variant,...otherProps}){let computedSize=size,computedVariant=variant;const newProps={"aria-pressed":isPressed};var _computedSize,_computedVariant,_computedVariant2,_computedVariant3,_computedVariant4,_computedVariant5;return isSmall&&(null!==(_computedSize=computedSize)&&void 0!==_computedSize||(computedSize="small")),isPrimary&&(null!==(_computedVariant=computedVariant)&&void 0!==_computedVariant||(computedVariant="primary")),isTertiary&&(null!==(_computedVariant2=computedVariant)&&void 0!==_computedVariant2||(computedVariant="tertiary")),isSecondary&&(null!==(_computedVariant3=computedVariant)&&void 0!==_computedVariant3||(computedVariant="secondary")),isDefault&&((0,_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_3__.Z)("Button isDefault prop",{since:"5.4",alternative:'variant="secondary"',version:"6.2"}),null!==(_computedVariant4=computedVariant)&&void 0!==_computedVariant4||(computedVariant="secondary")),isLink&&(null!==(_computedVariant5=computedVariant)&&void 0!==_computedVariant5||(computedVariant="link")),{...newProps,...otherProps,size:computedSize,variant:computedVariant}}(props),{href:href,target:target,"aria-checked":ariaChecked,"aria-pressed":ariaPressed,"aria-selected":ariaSelected,...additionalProps}="href"in buttonOrAnchorProps?buttonOrAnchorProps:{href:void 0,target:void 0,...buttonOrAnchorProps},instanceId=(0,_wordpress_compose__WEBPACK_IMPORTED_MODULE_4__.Z)(Button,"components-button__description"),hasChildren="string"==typeof children&&!!children||Array.isArray(children)&&children?.[0]&&null!==children[0]&&"components-tooltip"!==children?.[0]?.props?.className,classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("components-button",className,{"is-next-40px-default-size":__next40pxDefaultSize,"is-secondary":"secondary"===variant,"is-primary":"primary"===variant,"is-small":"small"===size,"is-compact":"compact"===size,"is-tertiary":"tertiary"===variant,"is-pressed":[!0,"true","mixed"].includes(ariaPressed),"is-pressed-mixed":"mixed"===ariaPressed,"is-busy":isBusy,"is-link":"link"===variant,"is-destructive":isDestructive,"has-text":!!icon&&hasChildren,"has-icon":!!icon}),trulyDisabled=disabled&&!isFocusable,Tag=void 0===href||trulyDisabled?"button":"a",buttonProps="button"===Tag?{type:"button",disabled:trulyDisabled,"aria-checked":ariaChecked,"aria-pressed":ariaPressed,"aria-selected":ariaSelected}:{},anchorProps="a"===Tag?{href:href,target:target}:{};if(disabled&&isFocusable){buttonProps["aria-disabled"]=!0,anchorProps["aria-disabled"]=!0;for(const disabledEvent of disabledEventsOnDisabledButton)additionalProps[disabledEvent]=event=>{event&&(event.stopPropagation(),event.preventDefault())}}const shouldShowTooltip=!trulyDisabled&&(showTooltip&&label||shortcut||!!label&&!children?.length&&!1!==showTooltip),descriptionId=describedBy?instanceId:void 0,describedById=additionalProps["aria-describedby"]||descriptionId,commonProps={className:classes,"aria-label":additionalProps["aria-label"]||label,"aria-describedby":describedById,ref:ref},elementChildren=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[icon&&"left"===iconPosition&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_icon__WEBPACK_IMPORTED_MODULE_5__.Z,{icon:icon,size:iconSize}),text&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:text}),icon&&"right"===iconPosition&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_icon__WEBPACK_IMPORTED_MODULE_5__.Z,{icon:icon,size:iconSize}),children]}),element="a"===Tag?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("a",{...anchorProps,...additionalProps,...commonProps,children:elementChildren}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{...buttonProps,...additionalProps,...commonProps,children:elementChildren});let computedPlacement;return void 0!==tooltipPosition&&(computedPlacement=(0,_popover_utils__WEBPACK_IMPORTED_MODULE_6__.KF)(tooltipPosition)),shouldShowTooltip?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_tooltip__WEBPACK_IMPORTED_MODULE_8__.Z,{text:children?.length&&describedBy?describedBy:label,shortcut:shortcut,placement:computedPlacement,children:element}),describedBy&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_visually_hidden__WEBPACK_IMPORTED_MODULE_7__.Z,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{id:descriptionId,children:describedBy})})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[element,describedBy&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_visually_hidden__WEBPACK_IMPORTED_MODULE_7__.Z,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{id:descriptionId,children:describedBy})})]})}const Button=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(UnforwardedButton);__webpack_exports__.ZP=Button;try{UnforwardedButton.displayName="UnforwardedButton",UnforwardedButton.__docgenInfo={description:"",displayName:"UnforwardedButton",props:{__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the\ndefault size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The button's children.",name:"children",required:!1,type:{name:"ReactNode"}},describedBy:{defaultValue:null,description:"An accessible description for the button.",name:"describedBy",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"If provided, renders an Icon component inside the button.",name:"icon",required:!1,type:{name:"IconType"}},iconPosition:{defaultValue:{value:"'left'"},description:"If provided with `icon`, sets the position of icon relative to the `text`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},iconSize:{defaultValue:null,description:"If provided with `icon`, sets the icon size.\nPlease refer to the Icon component for more details regarding\nthe default value of its `size` prop.",name:"iconSize",required:!1,type:{name:"number"}},isBusy:{defaultValue:null,description:"Indicates activity while a action is being performed.",name:"isBusy",required:!1,type:{name:"boolean"}},isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},isPressed:{defaultValue:null,description:"Renders a pressed button style.",name:"isPressed",required:!1,type:{name:"boolean"}},isSmall:{defaultValue:null,description:"Decreases the size of the button.\n\nDeprecated in favor of the `size` prop. If both props are defined, the `size` prop will take precedence.\n@deprecated Use the `'small'` value on the `size` prop instead.",name:"isSmall",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Sets the `aria-label` of the component, if none is provided.\nSets the Tooltip content if `showTooltip` is provided.",name:"label",required:!1,type:{name:"string"}},shortcut:{defaultValue:null,description:"If provided with `showTooltip`, appends the Shortcut label to the tooltip content.\nIf an object is provided, it should contain `display` and `ariaLabel` keys.",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},showTooltip:{defaultValue:null,description:"If provided, renders a Tooltip component for the button.",name:"showTooltip",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"The size of the button.\n\n- `'default'`: For normal text-label buttons, unless it is a toggle button.\n- `'compact'`: For toggle buttons, icon buttons, and buttons when used in context of either.\n- `'small'`: For icon buttons associated with more advanced or auxiliary features.\n\nIf the deprecated `isSmall` prop is also defined, this prop will take precedence.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'}]}},text:{defaultValue:null,description:"If provided, displays the given text inside the button. If the button contains children elements, the text is displayed before them.",name:"text",required:!1,type:{name:"string"}},tooltipPosition:{defaultValue:null,description:"If provided with `showTooltip`, sets the position of the tooltip.\nPlease refer to the Tooltip component for more details regarding the defaults.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"bottom"'},{value:'"top"'},{value:'"middle left"'},{value:'"middle center"'},{value:'"middle right"'},{value:'"bottom left"'},{value:'"bottom center"'},{value:'"bottom right"'},{value:'"top left"'},{value:'"top center"'},{value:'"top right"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left bottom"'},{value:'"middle left top"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center bottom"'},{value:'"middle center top"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right bottom"'},{value:'"middle right top"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left bottom"'},{value:'"bottom left top"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center bottom"'},{value:'"bottom center top"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right bottom"'},{value:'"bottom right top"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left bottom"'},{value:'"top left top"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center bottom"'},{value:'"top center top"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right bottom"'},{value:'"top right top"'}]}},variant:{defaultValue:null,description:"Specifies the button's style.\nThe accepted values are:\n'primary' (the primary button styles)\n'secondary' (the default button styles)\n'tertiary' (the text-based button styles)\n'link' (the link button styles)",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},__experimentalIsFocusable:{defaultValue:null,description:"Whether this is focusable.",name:"__experimentalIsFocusable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the button is disabled.\nIf `true`, this will force a `button` element to be rendered.",name:"disabled",required:!1,type:{name:"boolean"}},href:{defaultValue:null,description:"If provided, renders `a` instead of `button`.",name:"href",required:!0,type:{name:"string"}},target:{defaultValue:null,description:"If provided with `href`, sets the `target` attribute to the `a`.",name:"target",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/button/index.tsx#UnforwardedButton"]={docgenInfo:UnforwardedButton.__docgenInfo,name:"UnforwardedButton",path:"packages/components/src/button/index.tsx#UnforwardedButton"})}catch(__react_docgen_typescript_loader_error){}try{Button.displayName="Button",Button.__docgenInfo={description:"Lets users take actions and make choices with a single click or tap.\n\n```jsx\nimport { Button } from '@wordpress/components';\nconst Mybutton = () => (\n  <Button\n    variant=\"primary\"\n    onClick={ handleClick }\n  >\n    Click here\n  </Button>\n);\n```",displayName:"Button",props:{__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the\ndefault size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The button's children.",name:"children",required:!1,type:{name:"ReactNode"}},describedBy:{defaultValue:null,description:"An accessible description for the button.",name:"describedBy",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"If provided, renders an Icon component inside the button.",name:"icon",required:!1,type:{name:"IconType"}},iconPosition:{defaultValue:{value:"'left'"},description:"If provided with `icon`, sets the position of icon relative to the `text`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},iconSize:{defaultValue:null,description:"If provided with `icon`, sets the icon size.\nPlease refer to the Icon component for more details regarding\nthe default value of its `size` prop.",name:"iconSize",required:!1,type:{name:"number"}},isBusy:{defaultValue:null,description:"Indicates activity while a action is being performed.",name:"isBusy",required:!1,type:{name:"boolean"}},isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},isPressed:{defaultValue:null,description:"Renders a pressed button style.",name:"isPressed",required:!1,type:{name:"boolean"}},isSmall:{defaultValue:null,description:"Decreases the size of the button.\n\nDeprecated in favor of the `size` prop. If both props are defined, the `size` prop will take precedence.\n@deprecated Use the `'small'` value on the `size` prop instead.",name:"isSmall",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Sets the `aria-label` of the component, if none is provided.\nSets the Tooltip content if `showTooltip` is provided.",name:"label",required:!1,type:{name:"string"}},shortcut:{defaultValue:null,description:"If provided with `showTooltip`, appends the Shortcut label to the tooltip content.\nIf an object is provided, it should contain `display` and `ariaLabel` keys.",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},showTooltip:{defaultValue:null,description:"If provided, renders a Tooltip component for the button.",name:"showTooltip",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"The size of the button.\n\n- `'default'`: For normal text-label buttons, unless it is a toggle button.\n- `'compact'`: For toggle buttons, icon buttons, and buttons when used in context of either.\n- `'small'`: For icon buttons associated with more advanced or auxiliary features.\n\nIf the deprecated `isSmall` prop is also defined, this prop will take precedence.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'}]}},text:{defaultValue:null,description:"If provided, displays the given text inside the button. If the button contains children elements, the text is displayed before them.",name:"text",required:!1,type:{name:"string"}},tooltipPosition:{defaultValue:null,description:"If provided with `showTooltip`, sets the position of the tooltip.\nPlease refer to the Tooltip component for more details regarding the defaults.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"bottom"'},{value:'"top"'},{value:'"middle left"'},{value:'"middle center"'},{value:'"middle right"'},{value:'"bottom left"'},{value:'"bottom center"'},{value:'"bottom right"'},{value:'"top left"'},{value:'"top center"'},{value:'"top right"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left bottom"'},{value:'"middle left top"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center bottom"'},{value:'"middle center top"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right bottom"'},{value:'"middle right top"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left bottom"'},{value:'"bottom left top"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center bottom"'},{value:'"bottom center top"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right bottom"'},{value:'"bottom right top"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left bottom"'},{value:'"top left top"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center bottom"'},{value:'"top center top"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right bottom"'},{value:'"top right top"'}]}},variant:{defaultValue:null,description:"Specifies the button's style.\nThe accepted values are:\n'primary' (the primary button styles)\n'secondary' (the default button styles)\n'tertiary' (the text-based button styles)\n'link' (the link button styles)",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},__experimentalIsFocusable:{defaultValue:null,description:"Whether this is focusable.",name:"__experimentalIsFocusable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the button is disabled.\nIf `true`, this will force a `button` element to be rendered.",name:"disabled",required:!1,type:{name:"boolean"}},href:{defaultValue:null,description:"If provided, renders `a` instead of `button`.",name:"href",required:!0,type:{name:"string"}},target:{defaultValue:null,description:"If provided with `href`, sets the `target` attribute to the `a`.",name:"target",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/button/index.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"packages/components/src/button/index.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{button.displayName="button",button.__docgenInfo={description:"Lets users take actions and make choices with a single click or tap.\n\n```jsx\nimport { Button } from '@wordpress/components';\nconst Mybutton = () => (\n  <Button\n    variant=\"primary\"\n    onClick={ handleClick }\n  >\n    Click here\n  </Button>\n);\n```",displayName:"button",props:{__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the\ndefault size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The button's children.",name:"children",required:!1,type:{name:"ReactNode"}},describedBy:{defaultValue:null,description:"An accessible description for the button.",name:"describedBy",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"If provided, renders an Icon component inside the button.",name:"icon",required:!1,type:{name:"IconType"}},iconPosition:{defaultValue:{value:"'left'"},description:"If provided with `icon`, sets the position of icon relative to the `text`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},iconSize:{defaultValue:null,description:"If provided with `icon`, sets the icon size.\nPlease refer to the Icon component for more details regarding\nthe default value of its `size` prop.",name:"iconSize",required:!1,type:{name:"number"}},isBusy:{defaultValue:null,description:"Indicates activity while a action is being performed.",name:"isBusy",required:!1,type:{name:"boolean"}},isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},isPressed:{defaultValue:null,description:"Renders a pressed button style.",name:"isPressed",required:!1,type:{name:"boolean"}},isSmall:{defaultValue:null,description:"Decreases the size of the button.\n\nDeprecated in favor of the `size` prop. If both props are defined, the `size` prop will take precedence.\n@deprecated Use the `'small'` value on the `size` prop instead.",name:"isSmall",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Sets the `aria-label` of the component, if none is provided.\nSets the Tooltip content if `showTooltip` is provided.",name:"label",required:!1,type:{name:"string"}},shortcut:{defaultValue:null,description:"If provided with `showTooltip`, appends the Shortcut label to the tooltip content.\nIf an object is provided, it should contain `display` and `ariaLabel` keys.",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},showTooltip:{defaultValue:null,description:"If provided, renders a Tooltip component for the button.",name:"showTooltip",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"The size of the button.\n\n- `'default'`: For normal text-label buttons, unless it is a toggle button.\n- `'compact'`: For toggle buttons, icon buttons, and buttons when used in context of either.\n- `'small'`: For icon buttons associated with more advanced or auxiliary features.\n\nIf the deprecated `isSmall` prop is also defined, this prop will take precedence.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'}]}},text:{defaultValue:null,description:"If provided, displays the given text inside the button. If the button contains children elements, the text is displayed before them.",name:"text",required:!1,type:{name:"string"}},tooltipPosition:{defaultValue:null,description:"If provided with `showTooltip`, sets the position of the tooltip.\nPlease refer to the Tooltip component for more details regarding the defaults.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"bottom"'},{value:'"top"'},{value:'"middle left"'},{value:'"middle center"'},{value:'"middle right"'},{value:'"bottom left"'},{value:'"bottom center"'},{value:'"bottom right"'},{value:'"top left"'},{value:'"top center"'},{value:'"top right"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left bottom"'},{value:'"middle left top"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center bottom"'},{value:'"middle center top"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right bottom"'},{value:'"middle right top"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left bottom"'},{value:'"bottom left top"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center bottom"'},{value:'"bottom center top"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right bottom"'},{value:'"bottom right top"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left bottom"'},{value:'"top left top"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center bottom"'},{value:'"top center top"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right bottom"'},{value:'"top right top"'}]}},variant:{defaultValue:null,description:"Specifies the button's style.\nThe accepted values are:\n'primary' (the primary button styles)\n'secondary' (the default button styles)\n'tertiary' (the text-based button styles)\n'link' (the link button styles)",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},__experimentalIsFocusable:{defaultValue:null,description:"Whether this is focusable.",name:"__experimentalIsFocusable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the button is disabled.\nIf `true`, this will force a `button` element to be rendered.",name:"disabled",required:!1,type:{name:"boolean"}},href:{defaultValue:null,description:"If provided, renders `a` instead of `button`.",name:"href",required:!0,type:{name:"string"}},target:{defaultValue:null,description:"If provided with `href`, sets the `target` attribute to the `a`.",name:"target",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/button/index.tsx#button"]={docgenInfo:button.__docgenInfo,name:"button",path:"packages/components/src/button/index.tsx#button"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/icon/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return icon}});var react=__webpack_require__("./node_modules/react/index.js"),svg=__webpack_require__("./packages/primitives/build-module/svg/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function Dashicon({icon:icon,className:className,size:size=20,style:style={},...extraProps}){const iconClass=["dashicon","dashicons","dashicons-"+icon,className].filter(Boolean).join(" "),styles={...20!=size?{fontSize:`${size}px`,width:`${size}px`,height:`${size}px`}:{},...style};return(0,jsx_runtime.jsx)("span",{className:iconClass,style:styles,...extraProps})}Dashicon.displayName="Dashicon";var dashicon=Dashicon;try{Dashicon.displayName="Dashicon",Dashicon.__docgenInfo={description:"",displayName:"Dashicon",props:{icon:{defaultValue:null,description:"The icon name",name:"icon",required:!0,type:{name:"enum",value:[{value:'"button"'},{value:'"html"'},{value:'"menu"'},{value:'"filter"'},{value:'"marker"'},{value:'"text"'},{value:'"hidden"'},{value:'"id"'},{value:'"search"'},{value:'"email"'},{value:'"heading"'},{value:'"no"'},{value:'"yes"'},{value:'"location"'},{value:'"move"'},{value:'"ellipsis"'},{value:'"groups"'},{value:'"columns"'},{value:'"visibility"'},{value:'"warning"'},{value:'"info"'},{value:'"sort"'},{value:'"admin-appearance"'},{value:'"admin-collapse"'},{value:'"admin-comments"'},{value:'"admin-customizer"'},{value:'"admin-generic"'},{value:'"admin-home"'},{value:'"admin-links"'},{value:'"admin-media"'},{value:'"admin-multisite"'},{value:'"admin-network"'},{value:'"admin-page"'},{value:'"admin-plugins"'},{value:'"admin-post"'},{value:'"admin-settings"'},{value:'"admin-site-alt"'},{value:'"admin-site-alt2"'},{value:'"admin-site-alt3"'},{value:'"admin-site"'},{value:'"admin-tools"'},{value:'"admin-users"'},{value:'"airplane"'},{value:'"album"'},{value:'"align-center"'},{value:'"align-full-width"'},{value:'"align-left"'},{value:'"align-none"'},{value:'"align-pull-left"'},{value:'"align-pull-right"'},{value:'"align-right"'},{value:'"align-wide"'},{value:'"amazon"'},{value:'"analytics"'},{value:'"archive"'},{value:'"arrow-down-alt"'},{value:'"arrow-down-alt2"'},{value:'"arrow-down"'},{value:'"arrow-left-alt"'},{value:'"arrow-left-alt2"'},{value:'"arrow-left"'},{value:'"arrow-right-alt"'},{value:'"arrow-right-alt2"'},{value:'"arrow-right"'},{value:'"arrow-up-alt"'},{value:'"arrow-up-alt2"'},{value:'"arrow-up"'},{value:'"arrow-up-duplicate"'},{value:'"art"'},{value:'"awards"'},{value:'"backup"'},{value:'"bank"'},{value:'"beer"'},{value:'"bell"'},{value:'"block-default"'},{value:'"book-alt"'},{value:'"book"'},{value:'"buddicons-activity"'},{value:'"buddicons-bbpress-logo"'},{value:'"buddicons-buddypress-logo"'},{value:'"buddicons-community"'},{value:'"buddicons-forums"'},{value:'"buddicons-friends"'},{value:'"buddicons-groups"'},{value:'"buddicons-pm"'},{value:'"buddicons-replies"'},{value:'"buddicons-topics"'},{value:'"buddicons-tracking"'},{value:'"building"'},{value:'"businessman"'},{value:'"businessperson"'},{value:'"businesswoman"'},{value:'"calculator"'},{value:'"camera-alt"'},{value:'"car"'},{value:'"calendar-alt"'},{value:'"calendar"'},{value:'"camera"'},{value:'"carrot"'},{value:'"cart"'},{value:'"category"'},{value:'"chart-area"'},{value:'"chart-bar"'},{value:'"chart-line"'},{value:'"chart-pie"'},{value:'"clipboard"'},{value:'"clock"'},{value:'"cloud-saved"'},{value:'"cloud-upload"'},{value:'"cloud"'},{value:'"code-standards"'},{value:'"coffee"'},{value:'"color-picker"'},{value:'"controls-back"'},{value:'"controls-forward"'},{value:'"controls-pause"'},{value:'"controls-play"'},{value:'"controls-repeat"'},{value:'"controls-skipback"'},{value:'"controls-skipforward"'},{value:'"controls-volumeoff"'},{value:'"controls-volumeon"'},{value:'"cover-image"'},{value:'"dashboard"'},{value:'"database"'},{value:'"database-add"'},{value:'"database-export"'},{value:'"database-import"'},{value:'"database-remove"'},{value:'"database-view"'},{value:'"desktop"'},{value:'"dismiss"'},{value:'"download"'},{value:'"drumstick"'},{value:'"edit"'},{value:'"edit-large"'},{value:'"edit-page"'},{value:'"editor-aligncenter"'},{value:'"editor-alignleft"'},{value:'"editor-alignright"'},{value:'"editor-bold"'},{value:'"editor-break"'},{value:'"editor-code"'},{value:'"editor-code-duplicate"'},{value:'"editor-contract"'},{value:'"editor-customchar"'},{value:'"editor-expand"'},{value:'"editor-help"'},{value:'"editor-indent"'},{value:'"editor-insertmore"'},{value:'"editor-italic"'},{value:'"editor-justify"'},{value:'"editor-kitchensink"'},{value:'"editor-ltr"'},{value:'"editor-ol-rtl"'},{value:'"editor-ol"'},{value:'"editor-outdent"'},{value:'"editor-paragraph"'},{value:'"editor-paste-text"'},{value:'"editor-paste-word"'},{value:'"editor-quote"'},{value:'"editor-removeformatting"'},{value:'"editor-rtl"'},{value:'"editor-spellcheck"'},{value:'"editor-strikethrough"'},{value:'"editor-table"'},{value:'"editor-textcolor"'},{value:'"editor-ul"'},{value:'"editor-underline"'},{value:'"editor-unlink"'},{value:'"editor-video"'},{value:'"email-alt"'},{value:'"email-alt2"'},{value:'"embed-audio"'},{value:'"embed-generic"'},{value:'"embed-photo"'},{value:'"embed-post"'},{value:'"embed-video"'},{value:'"excerpt-view"'},{value:'"exit"'},{value:'"external"'},{value:'"facebook-alt"'},{value:'"facebook"'},{value:'"feedback"'},{value:'"flag"'},{value:'"food"'},{value:'"format-aside"'},{value:'"format-audio"'},{value:'"format-chat"'},{value:'"format-gallery"'},{value:'"format-image"'},{value:'"format-quote"'},{value:'"format-status"'},{value:'"format-video"'},{value:'"forms"'},{value:'"fullscreen-alt"'},{value:'"fullscreen-exit-alt"'},{value:'"games"'},{value:'"google"'},{value:'"googleplus"'},{value:'"grid-view"'},{value:'"hammer"'},{value:'"heart"'},{value:'"hourglass"'},{value:'"id-alt"'},{value:'"image-crop"'},{value:'"image-filter"'},{value:'"image-flip-horizontal"'},{value:'"image-flip-vertical"'},{value:'"image-rotate-left"'},{value:'"image-rotate-right"'},{value:'"image-rotate"'},{value:'"images-alt"'},{value:'"images-alt2"'},{value:'"index-card"'},{value:'"info-outline"'},{value:'"insert-after"'},{value:'"insert-before"'},{value:'"insert"'},{value:'"instagram"'},{value:'"keyboard-hide"'},{value:'"laptop"'},{value:'"layout"'},{value:'"leftright"'},{value:'"lightbulb"'},{value:'"list-view"'},{value:'"linkedin"'},{value:'"location-alt"'},{value:'"lock-duplicate"'},{value:'"lock"'},{value:'"media-archive"'},{value:'"media-audio"'},{value:'"media-code"'},{value:'"media-default"'},{value:'"media-document"'},{value:'"media-interactive"'},{value:'"media-spreadsheet"'},{value:'"media-text"'},{value:'"media-video"'},{value:'"megaphone"'},{value:'"menu-alt"'},{value:'"menu-alt2"'},{value:'"menu-alt3"'},{value:'"money-alt"'},{value:'"microphone"'},{value:'"migrate"'},{value:'"minus"'},{value:'"money"'},{value:'"nametag"'},{value:'"networking"'},{value:'"no-alt"'},{value:'"open-folder"'},{value:'"palmtree"'},{value:'"paperclip"'},{value:'"performance"'},{value:'"pets"'},{value:'"pdf"'},{value:'"phone"'},{value:'"pinterest"'},{value:'"playlist-audio"'},{value:'"playlist-video"'},{value:'"plus-alt"'},{value:'"plus-light"'},{value:'"plus"'},{value:'"portfolio"'},{value:'"post-status"'},{value:'"pressthis"'},{value:'"products"'},{value:'"plugins-checked"'},{value:'"plus-alt2"'},{value:'"podio"'},{value:'"printer"'},{value:'"privacy"'},{value:'"randomize"'},{value:'"reddit"'},{value:'"redo"'},{value:'"remove"'},{value:'"rest-api"'},{value:'"rss"'},{value:'"saved"'},{value:'"schedule"'},{value:'"screenoptions"'},{value:'"share-alt"'},{value:'"share-alt2"'},{value:'"share"'},{value:'"shield-alt"'},{value:'"shield"'},{value:'"shortcode"'},{value:'"slides"'},{value:'"smartphone"'},{value:'"smiley"'},{value:'"sos"'},{value:'"star-empty"'},{value:'"star-filled"'},{value:'"star-half"'},{value:'"sticky"'},{value:'"store"'},{value:'"spotify"'},{value:'"superhero"'},{value:'"superhero-alt"'},{value:'"table-col-after"'},{value:'"table-col-before"'},{value:'"table-col-delete"'},{value:'"table-row-after"'},{value:'"table-row-before"'},{value:'"table-row-delete"'},{value:'"tablet"'},{value:'"tag"'},{value:'"tagcloud"'},{value:'"testimonial"'},{value:'"text-page"'},{value:'"thumbs-down"'},{value:'"thumbs-up"'},{value:'"tickets-alt"'},{value:'"tickets"'},{value:'"tide"'},{value:'"translation"'},{value:'"trash"'},{value:'"twitch"'},{value:'"twitter"'},{value:'"twitter-alt"'},{value:'"undo"'},{value:'"universal-access-alt"'},{value:'"universal-access"'},{value:'"unlock"'},{value:'"update-alt"'},{value:'"update"'},{value:'"upload"'},{value:'"vault"'},{value:'"video-alt"'},{value:'"video-alt2"'},{value:'"video-alt3"'},{value:'"welcome-add-page"'},{value:'"welcome-comments"'},{value:'"welcome-learn-more"'},{value:'"welcome-view-site"'},{value:'"welcome-widgets-menus"'},{value:'"welcome-write-blog"'},{value:'"whatsapp"'},{value:'"wordpress-alt"'},{value:'"wordpress"'},{value:'"xing"'},{value:'"yes-alt"'},{value:'"youtube"'}]}},size:{defaultValue:{value:"20"},description:"Size of the icon",name:"size",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/dashicon/index.tsx#Dashicon"]={docgenInfo:Dashicon.__docgenInfo,name:"Dashicon",path:"packages/components/src/dashicon/index.tsx#Dashicon"})}catch(__react_docgen_typescript_loader_error){}function Icon({icon:icon=null,size:size=("string"==typeof icon?20:24),...additionalProps}){if("string"==typeof icon)return(0,jsx_runtime.jsx)(dashicon,{icon:icon,size:size,...additionalProps});if((0,react.isValidElement)(icon)&&dashicon===icon.type)return(0,react.cloneElement)(icon,{...additionalProps});if("function"==typeof icon)return(0,react.createElement)(icon,{size:size,...additionalProps});if(icon&&("svg"===icon.type||icon.type===svg.Wj)){const appliedProps={...icon.props,width:size,height:size,...additionalProps};return(0,jsx_runtime.jsx)(svg.Wj,{...appliedProps})}return(0,react.isValidElement)(icon)?(0,react.cloneElement)(icon,{size:size,...additionalProps}):icon}var icon=Icon;try{Icon.displayName="Icon",Icon.__docgenInfo={description:"",displayName:"Icon",props:{icon:{defaultValue:{value:"null"},description:"The icon to render. Supported values are: Dashicons (specified as\nstrings), functions, Component instances and `null`.",name:"icon",required:!1,type:{name:"IconType"}},size:{defaultValue:{value:"'string' === typeof icon ? 20 : 24"},description:"The size (width and height) of the icon.",name:"size",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/icon/index.tsx#Icon"]={docgenInfo:Icon.__docgenInfo,name:"Icon",path:"packages/components/src/icon/index.tsx#Icon"})}catch(__react_docgen_typescript_loader_error){}},"./packages/dom/build-module/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{T_:function(){return build_module_focus}});var focusable_namespaceObject={};__webpack_require__.r(focusable_namespaceObject),__webpack_require__.d(focusable_namespaceObject,{find:function(){return find}});var tabbable_namespaceObject={};function isVisible(element){return element.offsetWidth>0||element.offsetHeight>0||element.getClientRects().length>0}function find(context,{sequential:sequential=!1}={}){const elements=context.querySelectorAll(function buildSelector(sequential){return[sequential?'[tabindex]:not([tabindex^="-"])':"[tabindex]","a[href]","button:not([disabled])",'input:not([type="hidden"]):not([disabled])',"select:not([disabled])","textarea:not([disabled])",'iframe:not([tabindex^="-"])',"object","embed","area[href]","[contenteditable]:not([contenteditable=false])"].join(",")}(sequential));return Array.from(elements).filter((element=>{if(!isVisible(element))return!1;const{nodeName:nodeName}=element;return"AREA"!==nodeName||function isValidFocusableArea(element){const map=element.closest("map[name]");if(!map)return!1;const img=element.ownerDocument.querySelector('img[usemap="#'+map.name+'"]');return!!img&&isVisible(img)}(element)}))}function getTabIndex(element){const tabIndex=element.getAttribute("tabindex");return null===tabIndex?0:parseInt(tabIndex,10)}function isTabbableIndex(element){return-1!==getTabIndex(element)}function mapElementToObjectTabbable(element,index){return{element:element,index:index}}function mapObjectTabbableToElement(object){return object.element}function compareObjectTabbables(a,b){const aTabIndex=getTabIndex(a.element),bTabIndex=getTabIndex(b.element);return aTabIndex===bTabIndex?a.index-b.index:aTabIndex-bTabIndex}function filterTabbable(focusables){return focusables.filter(isTabbableIndex).map(mapElementToObjectTabbable).sort(compareObjectTabbables).map(mapObjectTabbableToElement).reduce(function createStatefulCollapseRadioGroup(){const CHOSEN_RADIO_BY_NAME={};return function collapseRadioGroup(result,element){const{nodeName:nodeName,type:type,checked:checked,name:name}=element;if("INPUT"!==nodeName||"radio"!==type||!name)return result.concat(element);const hasChosen=CHOSEN_RADIO_BY_NAME.hasOwnProperty(name);if(!checked&&hasChosen)return result;if(hasChosen){const hadChosenElement=CHOSEN_RADIO_BY_NAME[name];result=result.filter((e=>e!==hadChosenElement))}return CHOSEN_RADIO_BY_NAME[name]=element,result.concat(element)}}(),[])}function tabbable_find(context){return filterTabbable(find(context))}function findPrevious(element){return filterTabbable(find(element.ownerDocument.body)).reverse().find((focusable=>element.compareDocumentPosition(focusable)&element.DOCUMENT_POSITION_PRECEDING))}function findNext(element){return filterTabbable(find(element.ownerDocument.body)).find((focusable=>element.compareDocumentPosition(focusable)&element.DOCUMENT_POSITION_FOLLOWING))}__webpack_require__.r(tabbable_namespaceObject),__webpack_require__.d(tabbable_namespaceObject,{find:function(){return tabbable_find},findNext:function(){return findNext},findPrevious:function(){return findPrevious},isTabbableIndex:function(){return isTabbableIndex}});const build_module_focus={focusable:focusable_namespaceObject,tabbable:tabbable_namespaceObject}},"./packages/keycodes/build-module/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Ac:function(){return rawShortcut},Bi:function(){return PAGEDOWN},E_:function(){return displayShortcut},J3:function(){return shortcutAriaLabel},K5:function(){return ENTER},L_:function(){return SPACE},Mf:function(){return TAB},RL:function(){return LEFT},Sd:function(){return HOME},UP:function(){return UP},WV:function(){return DOWN},ZH:function(){return BACKSPACE},hY:function(){return ESCAPE},kC:function(){return F10},pX:function(){return RIGHT},uR:function(){return END},vd:function(){return isKeyboardEvent},wx:function(){return PAGEUP},yY:function(){return DELETE}});var change_case__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/capital-case/dist.es2015/index.js"),_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./packages/i18n/build-module/index.js"),_platform__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/keycodes/build-module/platform.js");const BACKSPACE=8,TAB=9,ENTER=13,ESCAPE=27,SPACE=32,PAGEUP=33,PAGEDOWN=34,END=35,HOME=36,LEFT=37,UP=38,RIGHT=39,DOWN=40,DELETE=46,F10=121,ALT="alt",CTRL="ctrl",COMMAND="meta",SHIFT="shift";function mapValues(object,mapFn){return Object.fromEntries(Object.entries(object).map((([key,value])=>[key,mapFn(value)])))}const modifiers={primary:_isApple=>_isApple()?[COMMAND]:[CTRL],primaryShift:_isApple=>_isApple()?[SHIFT,COMMAND]:[CTRL,SHIFT],primaryAlt:_isApple=>_isApple()?[ALT,COMMAND]:[CTRL,ALT],secondary:_isApple=>_isApple()?[SHIFT,ALT,COMMAND]:[CTRL,SHIFT,ALT],access:_isApple=>_isApple()?[CTRL,ALT]:[SHIFT,ALT],ctrl:()=>[CTRL],alt:()=>[ALT],ctrlShift:()=>[CTRL,SHIFT],shift:()=>[SHIFT],shiftAlt:()=>[SHIFT,ALT],undefined:()=>[]},rawShortcut=mapValues(modifiers,(modifier=>(character,_isApple=_platform__WEBPACK_IMPORTED_MODULE_1__.R)=>[...modifier(_isApple),character.toLowerCase()].join("+"))),displayShortcutList=mapValues(modifiers,(modifier=>(character,_isApple=_platform__WEBPACK_IMPORTED_MODULE_1__.R)=>{const isApple=_isApple(),replacementKeyMap={[ALT]:isApple?"⌥":"Alt",[CTRL]:isApple?"⌃":"Ctrl",[COMMAND]:"⌘",[SHIFT]:isApple?"⇧":"Shift"};return[...modifier(_isApple).reduce(((accumulator,key)=>{var _replacementKeyMap$ke;const replacementKey=null!==(_replacementKeyMap$ke=replacementKeyMap[key])&&void 0!==_replacementKeyMap$ke?_replacementKeyMap$ke:key;return isApple?[...accumulator,replacementKey]:[...accumulator,replacementKey,"+"]}),[]),(0,change_case__WEBPACK_IMPORTED_MODULE_2__.I)(character,{stripRegexp:/[^A-Z0-9~`,\.\\\-]/gi})]})),displayShortcut=mapValues(displayShortcutList,(shortcutList=>(character,_isApple=_platform__WEBPACK_IMPORTED_MODULE_1__.R)=>shortcutList(character,_isApple).join(""))),shortcutAriaLabel=mapValues(modifiers,(modifier=>(character,_isApple=_platform__WEBPACK_IMPORTED_MODULE_1__.R)=>{const isApple=_isApple(),replacementKeyMap={[SHIFT]:"Shift",[COMMAND]:isApple?"Command":"Control",[CTRL]:"Control",[ALT]:isApple?"Option":"Alt",",":(0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)("Comma"),".":(0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)("Period"),"`":(0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)("Backtick"),"~":(0,_wordpress_i18n__WEBPACK_IMPORTED_MODULE_0__.__)("Tilde")};return[...modifier(_isApple),character].map((key=>{var _replacementKeyMap$ke2;return(0,change_case__WEBPACK_IMPORTED_MODULE_2__.I)(null!==(_replacementKeyMap$ke2=replacementKeyMap[key])&&void 0!==_replacementKeyMap$ke2?_replacementKeyMap$ke2:key)})).join(isApple?" ":" + ")}));const isKeyboardEvent=mapValues(modifiers,(getModifiers=>(event,character,_isApple=_platform__WEBPACK_IMPORTED_MODULE_1__.R)=>{const mods=getModifiers(_isApple),eventMods=function getEventModifiers(event){return[ALT,CTRL,COMMAND,SHIFT].filter((key=>event[`${key}Key`]))}(event),replacementWithShiftKeyMap={Comma:",",Backslash:"\\",IntlRo:"\\",IntlYen:"\\"},modsDiff=mods.filter((mod=>!eventMods.includes(mod))),eventModsDiff=eventMods.filter((mod=>!mods.includes(mod)));if(modsDiff.length>0||eventModsDiff.length>0)return!1;let key=event.key.toLowerCase();return character?(event.altKey&&1===character.length&&(key=String.fromCharCode(event.keyCode).toLowerCase()),event.shiftKey&&1===character.length&&replacementWithShiftKeyMap[event.code]&&(key=replacementWithShiftKeyMap[event.code]),"del"===character&&(character="delete"),key===character.toLowerCase()):mods.includes(key)}))},"./packages/keycodes/build-module/platform.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function isAppleOS(_window=null){if(!_window){if("undefined"==typeof window)return!1;_window=window}const{platform:platform}=_window.navigator;return-1!==platform.indexOf("Mac")||["iPad","iPhone"].includes(platform)}__webpack_require__.d(__webpack_exports__,{R:function(){return isAppleOS}})},"./packages/primitives/build-module/svg/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Cd:function(){return Circle},G:function(){return G},UL:function(){return Rect},Wj:function(){return SVG},y$:function(){return Path}});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),_wordpress_element__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const Circle=props=>(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("circle",props),G=props=>(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("g",props),Path=props=>(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("path",props),Rect=props=>(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("rect",props),SVG=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((({className:className,isPressed:isPressed,...props},ref)=>{const appliedProps={...props,className:classnames__WEBPACK_IMPORTED_MODULE_0___default()(className,{"is-pressed":isPressed})||void 0,"aria-hidden":!0,focusable:!1};return(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.createElement)("svg",{...appliedProps,ref:ref})}));SVG.displayName="SVG"},"./packages/components/src/tree-grid/stories/index.story.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return index_story}});var react=__webpack_require__("./node_modules/react/index.js"),build_module=__webpack_require__("./packages/dom/build-module/index.js"),keycodes_build_module=__webpack_require__("./packages/keycodes/build-module/index.js");const RovingTabIndexContext=(0,react.createContext)(void 0),RovingTabIndexProvider=RovingTabIndexContext.Provider;var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function RovingTabIndex({children:children}){const[lastFocusedElement,setLastFocusedElement]=(0,react.useState)(),providerValue=(0,react.useMemo)((()=>({lastFocusedElement:lastFocusedElement,setLastFocusedElement:setLastFocusedElement})),[lastFocusedElement]);return(0,jsx_runtime.jsx)(RovingTabIndexProvider,{value:providerValue,children:children})}RovingTabIndex.displayName="RovingTabIndex";try{rovingtabindex.displayName="rovingtabindex",rovingtabindex.__docgenInfo={description:"Provider for adding roving tab index behaviors to tree grid structures.",displayName:"rovingtabindex",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/roving-tab-index.tsx#rovingtabindex"]={docgenInfo:rovingtabindex.__docgenInfo,name:"rovingtabindex",path:"packages/components/src/tree-grid/roving-tab-index.tsx#rovingtabindex"})}catch(__react_docgen_typescript_loader_error){}function getRowFocusables(rowElement){return build_module.T_.focusable.find(rowElement,{sequential:!0}).filter((focusable=>focusable.closest('[role="row"]')===rowElement))}function UnforwardedTreeGrid({children:children,onExpandRow:onExpandRow=(()=>{}),onCollapseRow:onCollapseRow=(()=>{}),onFocusRow:onFocusRow=(()=>{}),applicationAriaLabel:applicationAriaLabel,...props},ref){const onKeyDown=(0,react.useCallback)((event=>{const{keyCode:keyCode,metaKey:metaKey,ctrlKey:ctrlKey,altKey:altKey}=event;if(metaKey||ctrlKey||altKey||![keycodes_build_module.UP,keycodes_build_module.WV,keycodes_build_module.RL,keycodes_build_module.pX,keycodes_build_module.Sd,keycodes_build_module.uR].includes(keyCode))return;event.stopPropagation();const{activeElement:activeElement}=document,{currentTarget:treeGridElement}=event;if(!activeElement||!treeGridElement.contains(activeElement))return;const activeRow=activeElement.closest('[role="row"]');if(!activeRow)return;const focusablesInRow=getRowFocusables(activeRow),currentColumnIndex=focusablesInRow.indexOf(activeElement),canExpandCollapse=0===currentColumnIndex,cannotFocusNextColumn=canExpandCollapse&&("false"===activeRow.getAttribute("data-expanded")||"false"===activeRow.getAttribute("aria-expanded"))&&keyCode===keycodes_build_module.pX;if([keycodes_build_module.RL,keycodes_build_module.pX].includes(keyCode)){let nextIndex;if(nextIndex=keyCode===keycodes_build_module.RL?Math.max(0,currentColumnIndex-1):Math.min(currentColumnIndex+1,focusablesInRow.length-1),canExpandCollapse){if(keyCode===keycodes_build_module.RL){var _activeRow$getAttribu;if("true"===activeRow.getAttribute("data-expanded")||"true"===activeRow.getAttribute("aria-expanded"))return onCollapseRow(activeRow),void event.preventDefault();const level=Math.max(parseInt(null!==(_activeRow$getAttribu=activeRow?.getAttribute("aria-level"))&&void 0!==_activeRow$getAttribu?_activeRow$getAttribu:"1",10)-1,1),rows=Array.from(treeGridElement.querySelectorAll('[role="row"]'));let parentRow=activeRow;for(let i=rows.indexOf(activeRow);i>=0;i--){const ariaLevel=rows[i].getAttribute("aria-level");if(null!==ariaLevel&&parseInt(ariaLevel,10)===level){parentRow=rows[i];break}}getRowFocusables(parentRow)?.[0]?.focus()}if(keyCode===keycodes_build_module.pX){if("false"===activeRow.getAttribute("data-expanded")||"false"===activeRow.getAttribute("aria-expanded"))return onExpandRow(activeRow),void event.preventDefault();const focusableItems=getRowFocusables(activeRow);focusableItems.length>0&&focusableItems[nextIndex]?.focus()}return void event.preventDefault()}if(cannotFocusNextColumn)return;focusablesInRow[nextIndex].focus(),event.preventDefault()}else if([keycodes_build_module.UP,keycodes_build_module.WV].includes(keyCode)){const rows=Array.from(treeGridElement.querySelectorAll('[role="row"]')),currentRowIndex=rows.indexOf(activeRow);let nextRowIndex;if(nextRowIndex=keyCode===keycodes_build_module.UP?Math.max(0,currentRowIndex-1):Math.min(currentRowIndex+1,rows.length-1),nextRowIndex===currentRowIndex)return void event.preventDefault();const focusablesInNextRow=getRowFocusables(rows[nextRowIndex]);if(!focusablesInNextRow||!focusablesInNextRow.length)return void event.preventDefault();focusablesInNextRow[Math.min(currentColumnIndex,focusablesInNextRow.length-1)].focus(),onFocusRow(event,activeRow,rows[nextRowIndex]),event.preventDefault()}else if([keycodes_build_module.Sd,keycodes_build_module.uR].includes(keyCode)){const rows=Array.from(treeGridElement.querySelectorAll('[role="row"]')),currentRowIndex=rows.indexOf(activeRow);let nextRowIndex;if(nextRowIndex=keyCode===keycodes_build_module.Sd?0:rows.length-1,nextRowIndex===currentRowIndex)return void event.preventDefault();const focusablesInNextRow=getRowFocusables(rows[nextRowIndex]);if(!focusablesInNextRow||!focusablesInNextRow.length)return void event.preventDefault();focusablesInNextRow[Math.min(currentColumnIndex,focusablesInNextRow.length-1)].focus(),onFocusRow(event,activeRow,rows[nextRowIndex]),event.preventDefault()}}),[onExpandRow,onCollapseRow,onFocusRow]);return(0,jsx_runtime.jsx)(RovingTabIndex,{children:(0,jsx_runtime.jsx)("div",{role:"application","aria-label":applicationAriaLabel,children:(0,jsx_runtime.jsx)("table",{...props,role:"treegrid",onKeyDown:onKeyDown,ref:ref,children:(0,jsx_runtime.jsx)("tbody",{children:children})})})})}UnforwardedTreeGrid.displayName="UnforwardedTreeGrid";const TreeGrid=(0,react.forwardRef)(UnforwardedTreeGrid);var tree_grid=TreeGrid;try{TreeGrid.displayName="TreeGrid",TreeGrid.__docgenInfo={description:"`TreeGrid` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.\n\nA tree grid is a hierarchical 2 dimensional UI component, for example it could be\nused to implement a file system browser.\n\nA tree grid allows the user to navigate using arrow keys.\nUp/down to navigate vertically across rows, and left/right to navigate horizontally\nbetween focusables in a row.\n\nThe `TreeGrid` renders both a `table` and `tbody` element, and is intended to be used\nwith `TreeGridRow` (`tr`) and `TreeGridCell` (`td`) to build out a grid.\n\n```jsx\nfunction TreeMenu() {\n\treturn (\n\t\t<TreeGrid>\n\t\t\t<TreeGridRow level={ 1 } positionInSet={ 1 } setSize={ 2 }>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onSelect } { ...props }>Select</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onMove } { ...props }>Move</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t</TreeGridRow>\n\t\t\t<TreeGridRow level={ 1 } positionInSet={ 2 } setSize={ 2 }>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onSelect } { ...props }>Select</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onMove } { ...props }>Move</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t</TreeGridRow>\n\t\t\t<TreeGridRow level={ 2 } positionInSet={ 1 } setSize={ 1 }>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onSelect } { ...props }>Select</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onMove } { ...props }>Move</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t</TreeGridRow>\n\t\t</TreeGrid>\n\t);\n}\n```",displayName:"TreeGrid",props:{applicationAriaLabel:{defaultValue:null,description:"Label to use for the element with the `application` role.",name:"applicationAriaLabel",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children to be rendered in the tree grid.",name:"children",required:!0,type:{name:"ReactNode"}},onExpandRow:{defaultValue:{value:"noop"},description:"Callback to fire when row is expanded.",name:"onExpandRow",required:!1,type:{name:"(row: HTMLElement) => void"}},onCollapseRow:{defaultValue:{value:"noop"},description:"Callback to fire when row is collapsed.",name:"onCollapseRow",required:!1,type:{name:"(row: HTMLElement) => void"}},onFocusRow:{defaultValue:{value:"noop"},description:"Callback that fires when focus is shifted from one row to another via\nthe Up and Down keys. Callback is also fired on Home and End keys which\nmove focus from the beginning row to the end row.\n\nThe callback is passed the event, the start row element that the focus was on\noriginally, and the destination row element after the focus has moved.",name:"onFocusRow",required:!1,type:{name:"(event: KeyboardEvent<HTMLTableElement>, startRow: HTMLElement, destinationRow: HTMLElement) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/index.tsx#TreeGrid"]={docgenInfo:TreeGrid.__docgenInfo,name:"TreeGrid",path:"packages/components/src/tree-grid/index.tsx#TreeGrid"})}catch(__react_docgen_typescript_loader_error){}try{treegrid.displayName="treegrid",treegrid.__docgenInfo={description:"`TreeGrid` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.\n\nA tree grid is a hierarchical 2 dimensional UI component, for example it could be\nused to implement a file system browser.\n\nA tree grid allows the user to navigate using arrow keys.\nUp/down to navigate vertically across rows, and left/right to navigate horizontally\nbetween focusables in a row.\n\nThe `TreeGrid` renders both a `table` and `tbody` element, and is intended to be used\nwith `TreeGridRow` (`tr`) and `TreeGridCell` (`td`) to build out a grid.\n\n```jsx\nfunction TreeMenu() {\n\treturn (\n\t\t<TreeGrid>\n\t\t\t<TreeGridRow level={ 1 } positionInSet={ 1 } setSize={ 2 }>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onSelect } { ...props }>Select</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onMove } { ...props }>Move</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t</TreeGridRow>\n\t\t\t<TreeGridRow level={ 1 } positionInSet={ 2 } setSize={ 2 }>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onSelect } { ...props }>Select</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onMove } { ...props }>Move</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t</TreeGridRow>\n\t\t\t<TreeGridRow level={ 2 } positionInSet={ 1 } setSize={ 1 }>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onSelect } { ...props }>Select</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t\t<TreeGridCell>\n\t\t\t\t\t{ ( props ) => (\n\t\t\t\t\t\t<Button onClick={ onMove } { ...props }>Move</Button>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t</TreeGridRow>\n\t\t</TreeGrid>\n\t);\n}\n```",displayName:"treegrid",props:{applicationAriaLabel:{defaultValue:null,description:"Label to use for the element with the `application` role.",name:"applicationAriaLabel",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children to be rendered in the tree grid.",name:"children",required:!0,type:{name:"ReactNode"}},onExpandRow:{defaultValue:{value:"noop"},description:"Callback to fire when row is expanded.",name:"onExpandRow",required:!1,type:{name:"(row: HTMLElement) => void"}},onCollapseRow:{defaultValue:{value:"noop"},description:"Callback to fire when row is collapsed.",name:"onCollapseRow",required:!1,type:{name:"(row: HTMLElement) => void"}},onFocusRow:{defaultValue:{value:"noop"},description:"Callback that fires when focus is shifted from one row to another via\nthe Up and Down keys. Callback is also fired on Home and End keys which\nmove focus from the beginning row to the end row.\n\nThe callback is passed the event, the start row element that the focus was on\noriginally, and the destination row element after the focus has moved.",name:"onFocusRow",required:!1,type:{name:"(event: KeyboardEvent<HTMLTableElement>, startRow: HTMLElement, destinationRow: HTMLElement) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/index.tsx#treegrid"]={docgenInfo:treegrid.__docgenInfo,name:"treegrid",path:"packages/components/src/tree-grid/index.tsx#treegrid"})}catch(__react_docgen_typescript_loader_error){}try{TreeGridRow.displayName="TreeGridRow",TreeGridRow.__docgenInfo={description:"`TreeGridRow` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"TreeGridRow",props:{children:{defaultValue:null,description:"The children to be rendered in the row.",name:"children",required:!0,type:{name:"ReactNode"}},level:{defaultValue:null,description:"An integer value designating the level in the hierarchical tree structure.\nCounting starts at 1. A value of `1` indicates the root level of the structure.",name:"level",required:!0,type:{name:"number"}},positionInSet:{defaultValue:null,description:"An integer value that represents the position in the set.\nA set is the count of elements at a specific level. Counting starts at 1.",name:"positionInSet",required:!0,type:{name:"number"}},setSize:{defaultValue:null,description:"An integer value that represents the total number of items in the set,\nat this specific level of the hierarchy.",name:"setSize",required:!0,type:{name:"number"}},isExpanded:{defaultValue:null,description:"An optional value that designates whether a row is expanded or collapsed.\nCurrently this value only sets the correct aria-expanded property on a row,\nit has no other built-in behavior.\n\nIf there is a need to implement `aria-expanded` elsewhere in the row, cell,\nor element within a cell, you may pass `isExpanded={ undefined }`.\nIn order for keyboard navigation to continue working, add the\n`data-expanded` attribute with either `true`/`false`. This allows the\n`TreeGrid` component to still manage keyboard interactions while allowing\nthe `aria-expanded` attribute to be placed elsewhere.",name:"isExpanded",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/index.tsx#TreeGridRow"]={docgenInfo:TreeGridRow.__docgenInfo,name:"TreeGridRow",path:"packages/components/src/tree-grid/index.tsx#TreeGridRow"})}catch(__react_docgen_typescript_loader_error){}try{TreeGridCell.displayName="TreeGridCell",TreeGridCell.__docgenInfo={description:"`TreeGridCell` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"TreeGridCell",props:{withoutGridItem:{defaultValue:{value:"false"},description:"Render `children` without wrapping it in a `TreeGridItem` component.\nThis means that `children` will not participate in the roving tabindex.",name:"withoutGridItem",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"A render function that receives the props necessary to make it participate in the\nroving tabindex. Any extra props will also be passed through to this function.\n\nProps passed as an argument to the render prop must be passed to the child\nfocusable component/element within the cell. If a component is used, it must\ncorrectly handle the `onFocus`, `tabIndex`, and `ref` props, passing these to the\nelement it renders. These props are used to handle the roving tabindex functionality\nof the tree grid.\n\n```jsx\n<TreeGridCell>\n\t{ ( props ) => (\n\t\t<Button onClick={ doSomething } { ...props }>\n\t\t\tDo something\n\t\t</Button>\n\t) }\n</TreeGridCell>\n```",name:"children",required:!1,type:{name:"ReactNode | ((props: RovingTabIndexItemPassThruProps) => Element)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/index.tsx#TreeGridCell"]={docgenInfo:TreeGridCell.__docgenInfo,name:"TreeGridCell",path:"packages/components/src/tree-grid/index.tsx#TreeGridCell"})}catch(__react_docgen_typescript_loader_error){}try{TreeGridItem.displayName="TreeGridItem",TreeGridItem.__docgenInfo={description:"`TreeGridItem` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"TreeGridItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/index.tsx#TreeGridItem"]={docgenInfo:TreeGridItem.__docgenInfo,name:"TreeGridItem",path:"packages/components/src/tree-grid/index.tsx#TreeGridItem"})}catch(__react_docgen_typescript_loader_error){}function UnforwardedTreeGridRow({children:children,level:level,positionInSet:positionInSet,setSize:setSize,isExpanded:isExpanded,...props},ref){return(0,jsx_runtime.jsx)("tr",{...props,ref:ref,role:"row","aria-level":level,"aria-posinset":positionInSet,"aria-setsize":setSize,"aria-expanded":isExpanded,children:children})}UnforwardedTreeGridRow.displayName="UnforwardedTreeGridRow";const row_TreeGridRow=(0,react.forwardRef)(UnforwardedTreeGridRow);var tree_grid_row=row_TreeGridRow;try{row_TreeGridRow.displayName="TreeGridRow",row_TreeGridRow.__docgenInfo={description:"`TreeGridRow` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"TreeGridRow",props:{children:{defaultValue:null,description:"The children to be rendered in the row.",name:"children",required:!0,type:{name:"ReactNode"}},level:{defaultValue:null,description:"An integer value designating the level in the hierarchical tree structure.\nCounting starts at 1. A value of `1` indicates the root level of the structure.",name:"level",required:!0,type:{name:"number"}},positionInSet:{defaultValue:null,description:"An integer value that represents the position in the set.\nA set is the count of elements at a specific level. Counting starts at 1.",name:"positionInSet",required:!0,type:{name:"number"}},setSize:{defaultValue:null,description:"An integer value that represents the total number of items in the set,\nat this specific level of the hierarchy.",name:"setSize",required:!0,type:{name:"number"}},isExpanded:{defaultValue:null,description:"An optional value that designates whether a row is expanded or collapsed.\nCurrently this value only sets the correct aria-expanded property on a row,\nit has no other built-in behavior.\n\nIf there is a need to implement `aria-expanded` elsewhere in the row, cell,\nor element within a cell, you may pass `isExpanded={ undefined }`.\nIn order for keyboard navigation to continue working, add the\n`data-expanded` attribute with either `true`/`false`. This allows the\n`TreeGrid` component to still manage keyboard interactions while allowing\nthe `aria-expanded` attribute to be placed elsewhere.",name:"isExpanded",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/row.tsx#TreeGridRow"]={docgenInfo:row_TreeGridRow.__docgenInfo,name:"TreeGridRow",path:"packages/components/src/tree-grid/row.tsx#TreeGridRow"})}catch(__react_docgen_typescript_loader_error){}try{row.displayName="row",row.__docgenInfo={description:"`TreeGridRow` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"row",props:{children:{defaultValue:null,description:"The children to be rendered in the row.",name:"children",required:!0,type:{name:"ReactNode"}},level:{defaultValue:null,description:"An integer value designating the level in the hierarchical tree structure.\nCounting starts at 1. A value of `1` indicates the root level of the structure.",name:"level",required:!0,type:{name:"number"}},positionInSet:{defaultValue:null,description:"An integer value that represents the position in the set.\nA set is the count of elements at a specific level. Counting starts at 1.",name:"positionInSet",required:!0,type:{name:"number"}},setSize:{defaultValue:null,description:"An integer value that represents the total number of items in the set,\nat this specific level of the hierarchy.",name:"setSize",required:!0,type:{name:"number"}},isExpanded:{defaultValue:null,description:"An optional value that designates whether a row is expanded or collapsed.\nCurrently this value only sets the correct aria-expanded property on a row,\nit has no other built-in behavior.\n\nIf there is a need to implement `aria-expanded` elsewhere in the row, cell,\nor element within a cell, you may pass `isExpanded={ undefined }`.\nIn order for keyboard navigation to continue working, add the\n`data-expanded` attribute with either `true`/`false`. This allows the\n`TreeGrid` component to still manage keyboard interactions while allowing\nthe `aria-expanded` attribute to be placed elsewhere.",name:"isExpanded",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/row.tsx#row"]={docgenInfo:row.__docgenInfo,name:"row",path:"packages/components/src/tree-grid/row.tsx#row"})}catch(__react_docgen_typescript_loader_error){}const RovingTabIndexItem=(0,react.forwardRef)((function UnforwardedRovingTabIndexItem({children:children,as:Component,...props},forwardedRef){const localRef=(0,react.useRef)(),ref=forwardedRef||localRef,{lastFocusedElement:lastFocusedElement,setLastFocusedElement:setLastFocusedElement}=(0,react.useContext)(RovingTabIndexContext);let tabIndex;lastFocusedElement&&(tabIndex=lastFocusedElement===("current"in ref?ref.current:void 0)?0:-1);const allProps={ref:ref,tabIndex:tabIndex,onFocus:event=>setLastFocusedElement?.(event.target),...props};return"function"==typeof children?children(allProps):Component?(0,jsx_runtime.jsx)(Component,{...allProps,children:children}):null}));var roving_tab_index_item=RovingTabIndexItem;try{RovingTabIndexItem.displayName="RovingTabIndexItem",RovingTabIndexItem.__docgenInfo={description:"",displayName:"RovingTabIndexItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/roving-tab-index-item.tsx#RovingTabIndexItem"]={docgenInfo:RovingTabIndexItem.__docgenInfo,name:"RovingTabIndexItem",path:"packages/components/src/tree-grid/roving-tab-index-item.tsx#RovingTabIndexItem"})}catch(__react_docgen_typescript_loader_error){}try{rovingtabindexitem.displayName="rovingtabindexitem",rovingtabindexitem.__docgenInfo={description:"",displayName:"rovingtabindexitem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/roving-tab-index-item.tsx#rovingtabindexitem"]={docgenInfo:rovingtabindexitem.__docgenInfo,name:"rovingtabindexitem",path:"packages/components/src/tree-grid/roving-tab-index-item.tsx#rovingtabindexitem"})}catch(__react_docgen_typescript_loader_error){}function UnforwardedTreeGridItem({children:children,...props},ref){return(0,jsx_runtime.jsx)(roving_tab_index_item,{ref:ref,...props,children:children})}UnforwardedTreeGridItem.displayName="UnforwardedTreeGridItem";const item_TreeGridItem=(0,react.forwardRef)(UnforwardedTreeGridItem);var tree_grid_item=item_TreeGridItem;try{item_TreeGridItem.displayName="TreeGridItem",item_TreeGridItem.__docgenInfo={description:"`TreeGridItem` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"TreeGridItem",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/item.tsx#TreeGridItem"]={docgenInfo:item_TreeGridItem.__docgenInfo,name:"TreeGridItem",path:"packages/components/src/tree-grid/item.tsx#TreeGridItem"})}catch(__react_docgen_typescript_loader_error){}try{item.displayName="item",item.__docgenInfo={description:"`TreeGridItem` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"item",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/item.tsx#item"]={docgenInfo:item.__docgenInfo,name:"item",path:"packages/components/src/tree-grid/item.tsx#item"})}catch(__react_docgen_typescript_loader_error){}function UnforwardedTreeGridCell({children:children,withoutGridItem:withoutGridItem=!1,...props},ref){return(0,jsx_runtime.jsx)("td",{...props,role:"gridcell",children:withoutGridItem?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:children}):(0,jsx_runtime.jsx)(tree_grid_item,{ref:ref,children:children})})}UnforwardedTreeGridCell.displayName="UnforwardedTreeGridCell";const cell_TreeGridCell=(0,react.forwardRef)(UnforwardedTreeGridCell);var tree_grid_cell=cell_TreeGridCell;try{cell_TreeGridCell.displayName="TreeGridCell",cell_TreeGridCell.__docgenInfo={description:"`TreeGridCell` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"TreeGridCell",props:{withoutGridItem:{defaultValue:{value:"false"},description:"Render `children` without wrapping it in a `TreeGridItem` component.\nThis means that `children` will not participate in the roving tabindex.",name:"withoutGridItem",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"A render function that receives the props necessary to make it participate in the\nroving tabindex. Any extra props will also be passed through to this function.\n\nProps passed as an argument to the render prop must be passed to the child\nfocusable component/element within the cell. If a component is used, it must\ncorrectly handle the `onFocus`, `tabIndex`, and `ref` props, passing these to the\nelement it renders. These props are used to handle the roving tabindex functionality\nof the tree grid.\n\n```jsx\n<TreeGridCell>\n\t{ ( props ) => (\n\t\t<Button onClick={ doSomething } { ...props }>\n\t\t\tDo something\n\t\t</Button>\n\t) }\n</TreeGridCell>\n```",name:"children",required:!1,type:{name:"ReactNode | ((props: RovingTabIndexItemPassThruProps) => Element)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/cell.tsx#TreeGridCell"]={docgenInfo:cell_TreeGridCell.__docgenInfo,name:"TreeGridCell",path:"packages/components/src/tree-grid/cell.tsx#TreeGridCell"})}catch(__react_docgen_typescript_loader_error){}try{cell.displayName="cell",cell.__docgenInfo={description:"`TreeGridCell` is used to create a tree hierarchy.\nIt is not a visually styled component, but instead helps with adding\nkeyboard navigation and roving tab index behaviors to tree grid structures.",displayName:"cell",props:{withoutGridItem:{defaultValue:{value:"false"},description:"Render `children` without wrapping it in a `TreeGridItem` component.\nThis means that `children` will not participate in the roving tabindex.",name:"withoutGridItem",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"A render function that receives the props necessary to make it participate in the\nroving tabindex. Any extra props will also be passed through to this function.\n\nProps passed as an argument to the render prop must be passed to the child\nfocusable component/element within the cell. If a component is used, it must\ncorrectly handle the `onFocus`, `tabIndex`, and `ref` props, passing these to the\nelement it renders. These props are used to handle the roving tabindex functionality\nof the tree grid.\n\n```jsx\n<TreeGridCell>\n\t{ ( props ) => (\n\t\t<Button onClick={ doSomething } { ...props }>\n\t\t\tDo something\n\t\t</Button>\n\t) }\n</TreeGridCell>\n```",name:"children",required:!1,type:{name:"ReactNode | ((props: RovingTabIndexItemPassThruProps) => Element)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tree-grid/cell.tsx#cell"]={docgenInfo:cell.__docgenInfo,name:"cell",path:"packages/components/src/tree-grid/cell.tsx#cell"})}catch(__react_docgen_typescript_loader_error){}var src_button=__webpack_require__("./packages/components/src/button/index.tsx"),input_control=__webpack_require__("./packages/components/src/input-control/index.tsx");var index_story={title:"Components (Experimental)/TreeGrid",component:tree_grid,subcomponents:{TreeGridRow:tree_grid_row,TreeGridCell:tree_grid_cell},argTypes:{children:{control:{type:null}}},parameters:{sourceLink:"packages/components/src/tree-grid",actions:{argTypesRegex:"^on.*"},controls:{expanded:!0}}};const Descender=({level:level})=>{if(1===level)return null;const indentation=" ".repeat(4*(level-1));return(0,jsx_runtime.jsx)("span",{"aria-hidden":"true",children:indentation+"├ "})};Descender.displayName="Descender";const Rows=({items:items=[],level:level=1})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:items.map(((item,index)=>{const hasChildren=!!item.types&&!!item.types.length;return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsxs)(tree_grid_row,{positionInSet:index+1,setSize:items.length,level:level,isExpanded:!0,children:[(0,jsx_runtime.jsx)(tree_grid_cell,{children:props=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Descender,{level:level}),(0,jsx_runtime.jsx)(src_button.zx,{variant:"primary",...props,children:item.name})]})}),(0,jsx_runtime.jsx)(tree_grid_cell,{children:props=>(0,jsx_runtime.jsx)(input_control.ZP,{label:"Description",hideLabelFromVision:!0,placeholder:"Description",...props})}),(0,jsx_runtime.jsx)(tree_grid_cell,{children:props=>(0,jsx_runtime.jsx)(input_control.ZP,{label:"Notes",hideLabelFromVision:!0,placeholder:"Notes",...props})})]}),hasChildren&&(0,jsx_runtime.jsx)(Rows,{items:item.types,level:level+1})]},item.name)}))}),Template=args=>(0,jsx_runtime.jsx)(tree_grid,{...args});Template.displayName="Template";const Default=Template.bind({});Default.args={children:(0,jsx_runtime.jsx)(Rows,{items:[{name:"Fruit",types:[{name:"Apple"},{name:"Orange"},{name:"Pear"}]},{name:"Vegetable",types:[{name:"Cucumber"},{name:"Parsnip"},{name:"Pumpkin"}]}]})},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => <TreeGrid {...args} />",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);