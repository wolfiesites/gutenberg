"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[1230],{"./packages/components/src/base-control/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Xp:function(){return BaseControl}});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_visually_hidden__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/components/src/visually-hidden/component.tsx"),_styles_base_control_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/components/src/base-control/styles/base-control-styles.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const BaseControl=({__nextHasNoMarginBottom:__nextHasNoMarginBottom=!1,id:id,label:label,hideLabelFromVision:hideLabelFromVision=!1,help:help,className:className,children:children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_styles_base_control_styles__WEBPACK_IMPORTED_MODULE_3__.im,{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("components-base-control",className),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(_styles_base_control_styles__WEBPACK_IMPORTED_MODULE_3__.ob,{className:"components-base-control__field",__nextHasNoMarginBottom:__nextHasNoMarginBottom,children:[label&&id&&(hideLabelFromVision?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_visually_hidden__WEBPACK_IMPORTED_MODULE_4__.Z,{as:"label",htmlFor:id,children:label}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_styles_base_control_styles__WEBPACK_IMPORTED_MODULE_3__.ar,{className:"components-base-control__label",htmlFor:id,children:label})),label&&!id&&(hideLabelFromVision?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_visually_hidden__WEBPACK_IMPORTED_MODULE_4__.Z,{as:"label",children:label}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(BaseControl.VisualLabel,{children:label})),children]}),!!help&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_styles_base_control_styles__WEBPACK_IMPORTED_MODULE_3__.vB,{id:id?id+"__help":void 0,className:"components-base-control__help",__nextHasNoMarginBottom:__nextHasNoMarginBottom,children:help})]});BaseControl.displayName="BaseControl";const VisualLabel=({className:className,children:children,...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_styles_base_control_styles__WEBPACK_IMPORTED_MODULE_3__.yF,{...props,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("components-base-control__label",className),children:children});VisualLabel.displayName="VisualLabel",BaseControl.VisualLabel=VisualLabel,__webpack_exports__.ZP=BaseControl;try{useBaseControlProps.displayName="useBaseControlProps",useBaseControlProps.__docgenInfo={description:"Generate props for the `BaseControl` and the inner control itself.\n\nNamely, it takes care of generating a unique `id`, properly associating it with the `label` and `help` elements.",displayName:"useBaseControlProps",props:{label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The HTML `id` of the control element (passed in as a child to `BaseControl`) to which labels and help text are being generated.\nThis is necessary to accessibly associate the label with that element.\n\nThe recommended way is to use the `useBaseControlProps` hook, which takes care of generating a unique `id` for you.\nOtherwise, if you choose to pass an explicit `id` to this prop, you are responsible for ensuring the uniqueness of the `id`.",name:"id",required:!1,type:{name:"string"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},help:{defaultValue:null,description:"Additional description for the control.\n\nIt is preferable to use plain text for `help`, as it can be accessibly associated with the control using `aria-describedby`.\nWhen the `help` contains links, or otherwise non-plain text content, it will be associated with the control using `aria-details`.",name:"help",required:!1,type:{name:"ReactNode"}},__nextHasNoMarginBottom:{defaultValue:{value:"false"},description:"Start opting into the new margin-free styles that will become the default in a future version.",name:"__nextHasNoMarginBottom",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/base-control/index.tsx#useBaseControlProps"]={docgenInfo:useBaseControlProps.__docgenInfo,name:"useBaseControlProps",path:"packages/components/src/base-control/index.tsx#useBaseControlProps"})}catch(__react_docgen_typescript_loader_error){}try{BaseControl.displayName="BaseControl",BaseControl.__docgenInfo={description:"`BaseControl` is a component used to generate labels and help text for components handling user inputs.\n\n```jsx\nimport { BaseControl, useBaseControlProps } from '@wordpress/components';\n\n// Render a `BaseControl` for a textarea input\nconst MyCustomTextareaControl = ({ children, ...baseProps }) => (\n\t// `useBaseControlProps` is a convenience hook to get the props for the `BaseControl`\n\t// and the inner control itself. Namely, it takes care of generating a unique `id`,\n\t// properly associating it with the `label` and `help` elements.\n\tconst { baseControlProps, controlProps } = useBaseControlProps( baseProps );\n\n\treturn (\n\t\t<BaseControl { ...baseControlProps } __nextHasNoMarginBottom={ true }>\n\t\t\t<textarea { ...controlProps }>\n\t\t\t  { children }\n\t\t\t</textarea>\n\t\t</BaseControl>\n\t);\n);\n```",displayName:"BaseControl",props:{__nextHasNoMarginBottom:{defaultValue:{value:"false"},description:"Start opting into the new margin-free styles that will become the default in a future version.",name:"__nextHasNoMarginBottom",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The HTML `id` of the control element (passed in as a child to `BaseControl`) to which labels and help text are being generated.\nThis is necessary to accessibly associate the label with that element.\n\nThe recommended way is to use the `useBaseControlProps` hook, which takes care of generating a unique `id` for you.\nOtherwise, if you choose to pass an explicit `id` to this prop, you are responsible for ensuring the uniqueness of the `id`.",name:"id",required:!1,type:{name:"string"}},help:{defaultValue:null,description:"Additional description for the control.\n\nIt is preferable to use plain text for `help`, as it can be accessibly associated with the control using `aria-describedby`.\nWhen the `help` contains links, or otherwise non-plain text content, it will be associated with the control using `aria-details`.",name:"help",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content to be displayed within the `BaseControl`.",name:"children",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/base-control/index.tsx#BaseControl"]={docgenInfo:BaseControl.__docgenInfo,name:"BaseControl",path:"packages/components/src/base-control/index.tsx#BaseControl"})}catch(__react_docgen_typescript_loader_error){}try{VisualLabel.displayName="BaseControl.VisualLabel",VisualLabel.__docgenInfo={description:"`BaseControl.VisualLabel` is used to render a purely visual label inside a `BaseControl` component.\n\nIt should only be used in cases where the children being rendered inside `BaseControl` are already accessibly labeled,\ne.g., a button, but we want an additional visual label for that section equivalent to the labels `BaseControl` would\notherwise use if the `label` prop was passed.",displayName:"BaseControl.VisualLabel",props:{as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:"enum",value:[{value:'"symbol"'},{value:'"object"'},{value:'"a"'},{value:'"abbr"'},{value:'"address"'},{value:'"area"'},{value:'"article"'},{value:'"aside"'},{value:'"audio"'},{value:'"b"'},{value:'"base"'},{value:'"bdi"'},{value:'"bdo"'},{value:'"big"'},{value:'"blockquote"'},{value:'"body"'},{value:'"br"'},{value:'"button"'},{value:'"canvas"'},{value:'"caption"'},{value:'"cite"'},{value:'"code"'},{value:'"col"'},{value:'"colgroup"'},{value:'"data"'},{value:'"datalist"'},{value:'"dd"'},{value:'"del"'},{value:'"details"'},{value:'"dfn"'},{value:'"dialog"'},{value:'"div"'},{value:'"dl"'},{value:'"dt"'},{value:'"em"'},{value:'"embed"'},{value:'"fieldset"'},{value:'"figcaption"'},{value:'"figure"'},{value:'"footer"'},{value:'"form"'},{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'},{value:'"head"'},{value:'"header"'},{value:'"hgroup"'},{value:'"hr"'},{value:'"html"'},{value:'"i"'},{value:'"iframe"'},{value:'"img"'},{value:'"input"'},{value:'"ins"'},{value:'"kbd"'},{value:'"keygen"'},{value:'"label"'},{value:'"legend"'},{value:'"li"'},{value:'"link"'},{value:'"main"'},{value:'"map"'},{value:'"mark"'},{value:'"menu"'},{value:'"menuitem"'},{value:'"meta"'},{value:'"meter"'},{value:'"nav"'},{value:'"noindex"'},{value:'"noscript"'},{value:'"ol"'},{value:'"optgroup"'},{value:'"option"'},{value:'"output"'},{value:'"p"'},{value:'"param"'},{value:'"picture"'},{value:'"pre"'},{value:'"progress"'},{value:'"q"'},{value:'"rp"'},{value:'"rt"'},{value:'"ruby"'},{value:'"s"'},{value:'"samp"'},{value:'"slot"'},{value:'"script"'},{value:'"section"'},{value:'"select"'},{value:'"small"'},{value:'"source"'},{value:'"span"'},{value:'"strong"'},{value:'"style"'},{value:'"sub"'},{value:'"summary"'},{value:'"sup"'},{value:'"table"'},{value:'"template"'},{value:'"tbody"'},{value:'"td"'},{value:'"textarea"'},{value:'"tfoot"'},{value:'"th"'},{value:'"thead"'},{value:'"time"'},{value:'"title"'},{value:'"tr"'},{value:'"track"'},{value:'"u"'},{value:'"ul"'},{value:'"var"'},{value:'"video"'},{value:'"wbr"'},{value:'"webview"'},{value:'"svg"'},{value:'"animate"'},{value:'"animateMotion"'},{value:'"animateTransform"'},{value:'"circle"'},{value:'"clipPath"'},{value:'"defs"'},{value:'"desc"'},{value:'"ellipse"'},{value:'"feBlend"'},{value:'"feColorMatrix"'},{value:'"feComponentTransfer"'},{value:'"feComposite"'},{value:'"feConvolveMatrix"'},{value:'"feDiffuseLighting"'},{value:'"feDisplacementMap"'},{value:'"feDistantLight"'},{value:'"feDropShadow"'},{value:'"feFlood"'},{value:'"feFuncA"'},{value:'"feFuncB"'},{value:'"feFuncG"'},{value:'"feFuncR"'},{value:'"feGaussianBlur"'},{value:'"feImage"'},{value:'"feMerge"'},{value:'"feMergeNode"'},{value:'"feMorphology"'},{value:'"feOffset"'},{value:'"fePointLight"'},{value:'"feSpecularLighting"'},{value:'"feSpotLight"'},{value:'"feTile"'},{value:'"feTurbulence"'},{value:'"filter"'},{value:'"foreignObject"'},{value:'"g"'},{value:'"image"'},{value:'"line"'},{value:'"linearGradient"'},{value:'"marker"'},{value:'"mask"'},{value:'"metadata"'},{value:'"mpath"'},{value:'"path"'},{value:'"pattern"'},{value:'"polygon"'},{value:'"polyline"'},{value:'"radialGradient"'},{value:'"rect"'},{value:'"stop"'},{value:'"switch"'},{value:'"text"'},{value:'"textPath"'},{value:'"tspan"'},{value:'"use"'},{value:'"view"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/base-control/index.tsx#BaseControl.VisualLabel"]={docgenInfo:BaseControl.VisualLabel.__docgenInfo,name:"BaseControl.VisualLabel",path:"packages/components/src/base-control/index.tsx#BaseControl.VisualLabel"})}catch(__react_docgen_typescript_loader_error){}try{VisualLabel.displayName="VisualLabel",VisualLabel.__docgenInfo={description:"`BaseControl.VisualLabel` is used to render a purely visual label inside a `BaseControl` component.\n\nIt should only be used in cases where the children being rendered inside `BaseControl` are already accessibly labeled,\ne.g., a button, but we want an additional visual label for that section equivalent to the labels `BaseControl` would\notherwise use if the `label` prop was passed.",displayName:"VisualLabel",props:{as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:"enum",value:[{value:'"symbol"'},{value:'"object"'},{value:'"a"'},{value:'"abbr"'},{value:'"address"'},{value:'"area"'},{value:'"article"'},{value:'"aside"'},{value:'"audio"'},{value:'"b"'},{value:'"base"'},{value:'"bdi"'},{value:'"bdo"'},{value:'"big"'},{value:'"blockquote"'},{value:'"body"'},{value:'"br"'},{value:'"button"'},{value:'"canvas"'},{value:'"caption"'},{value:'"cite"'},{value:'"code"'},{value:'"col"'},{value:'"colgroup"'},{value:'"data"'},{value:'"datalist"'},{value:'"dd"'},{value:'"del"'},{value:'"details"'},{value:'"dfn"'},{value:'"dialog"'},{value:'"div"'},{value:'"dl"'},{value:'"dt"'},{value:'"em"'},{value:'"embed"'},{value:'"fieldset"'},{value:'"figcaption"'},{value:'"figure"'},{value:'"footer"'},{value:'"form"'},{value:'"h1"'},{value:'"h2"'},{value:'"h3"'},{value:'"h4"'},{value:'"h5"'},{value:'"h6"'},{value:'"head"'},{value:'"header"'},{value:'"hgroup"'},{value:'"hr"'},{value:'"html"'},{value:'"i"'},{value:'"iframe"'},{value:'"img"'},{value:'"input"'},{value:'"ins"'},{value:'"kbd"'},{value:'"keygen"'},{value:'"label"'},{value:'"legend"'},{value:'"li"'},{value:'"link"'},{value:'"main"'},{value:'"map"'},{value:'"mark"'},{value:'"menu"'},{value:'"menuitem"'},{value:'"meta"'},{value:'"meter"'},{value:'"nav"'},{value:'"noindex"'},{value:'"noscript"'},{value:'"ol"'},{value:'"optgroup"'},{value:'"option"'},{value:'"output"'},{value:'"p"'},{value:'"param"'},{value:'"picture"'},{value:'"pre"'},{value:'"progress"'},{value:'"q"'},{value:'"rp"'},{value:'"rt"'},{value:'"ruby"'},{value:'"s"'},{value:'"samp"'},{value:'"slot"'},{value:'"script"'},{value:'"section"'},{value:'"select"'},{value:'"small"'},{value:'"source"'},{value:'"span"'},{value:'"strong"'},{value:'"style"'},{value:'"sub"'},{value:'"summary"'},{value:'"sup"'},{value:'"table"'},{value:'"template"'},{value:'"tbody"'},{value:'"td"'},{value:'"textarea"'},{value:'"tfoot"'},{value:'"th"'},{value:'"thead"'},{value:'"time"'},{value:'"title"'},{value:'"tr"'},{value:'"track"'},{value:'"u"'},{value:'"ul"'},{value:'"var"'},{value:'"video"'},{value:'"wbr"'},{value:'"webview"'},{value:'"svg"'},{value:'"animate"'},{value:'"animateMotion"'},{value:'"animateTransform"'},{value:'"circle"'},{value:'"clipPath"'},{value:'"defs"'},{value:'"desc"'},{value:'"ellipse"'},{value:'"feBlend"'},{value:'"feColorMatrix"'},{value:'"feComponentTransfer"'},{value:'"feComposite"'},{value:'"feConvolveMatrix"'},{value:'"feDiffuseLighting"'},{value:'"feDisplacementMap"'},{value:'"feDistantLight"'},{value:'"feDropShadow"'},{value:'"feFlood"'},{value:'"feFuncA"'},{value:'"feFuncB"'},{value:'"feFuncG"'},{value:'"feFuncR"'},{value:'"feGaussianBlur"'},{value:'"feImage"'},{value:'"feMerge"'},{value:'"feMergeNode"'},{value:'"feMorphology"'},{value:'"feOffset"'},{value:'"fePointLight"'},{value:'"feSpecularLighting"'},{value:'"feSpotLight"'},{value:'"feTile"'},{value:'"feTurbulence"'},{value:'"filter"'},{value:'"foreignObject"'},{value:'"g"'},{value:'"image"'},{value:'"line"'},{value:'"linearGradient"'},{value:'"marker"'},{value:'"mask"'},{value:'"metadata"'},{value:'"mpath"'},{value:'"path"'},{value:'"pattern"'},{value:'"polygon"'},{value:'"polyline"'},{value:'"radialGradient"'},{value:'"rect"'},{value:'"stop"'},{value:'"switch"'},{value:'"text"'},{value:'"textPath"'},{value:'"tspan"'},{value:'"use"'},{value:'"view"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/base-control/index.tsx#VisualLabel"]={docgenInfo:VisualLabel.__docgenInfo,name:"VisualLabel",path:"packages/components/src/base-control/index.tsx#VisualLabel"})}catch(__react_docgen_typescript_loader_error){}try{basecontrol.displayName="basecontrol",basecontrol.__docgenInfo={description:"`BaseControl` is a component used to generate labels and help text for components handling user inputs.\n\n```jsx\nimport { BaseControl, useBaseControlProps } from '@wordpress/components';\n\n// Render a `BaseControl` for a textarea input\nconst MyCustomTextareaControl = ({ children, ...baseProps }) => (\n\t// `useBaseControlProps` is a convenience hook to get the props for the `BaseControl`\n\t// and the inner control itself. Namely, it takes care of generating a unique `id`,\n\t// properly associating it with the `label` and `help` elements.\n\tconst { baseControlProps, controlProps } = useBaseControlProps( baseProps );\n\n\treturn (\n\t\t<BaseControl { ...baseControlProps } __nextHasNoMarginBottom={ true }>\n\t\t\t<textarea { ...controlProps }>\n\t\t\t  { children }\n\t\t\t</textarea>\n\t\t</BaseControl>\n\t);\n);\n```",displayName:"basecontrol",props:{__nextHasNoMarginBottom:{defaultValue:{value:"false"},description:"Start opting into the new margin-free styles that will become the default in a future version.",name:"__nextHasNoMarginBottom",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The HTML `id` of the control element (passed in as a child to `BaseControl`) to which labels and help text are being generated.\nThis is necessary to accessibly associate the label with that element.\n\nThe recommended way is to use the `useBaseControlProps` hook, which takes care of generating a unique `id` for you.\nOtherwise, if you choose to pass an explicit `id` to this prop, you are responsible for ensuring the uniqueness of the `id`.",name:"id",required:!1,type:{name:"string"}},help:{defaultValue:null,description:"Additional description for the control.\n\nIt is preferable to use plain text for `help`, as it can be accessibly associated with the control using `aria-describedby`.\nWhen the `help` contains links, or otherwise non-plain text content, it will be associated with the control using `aria-details`.",name:"help",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content to be displayed within the `BaseControl`.",name:"children",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/base-control/index.tsx#basecontrol"]={docgenInfo:basecontrol.__docgenInfo,name:"basecontrol",path:"packages/components/src/base-control/index.tsx#basecontrol"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/input-control/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{gs:function(){return InputControl},ZP:function(){return input_control}});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),use_instance_id=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),input_base=__webpack_require__("./packages/components/src/input-control/input-base.tsx"),use_gesture_react_esm=__webpack_require__("./node_modules/@use-gesture/react/dist/use-gesture-react.esm.js");var input_control_styles=__webpack_require__("./packages/components/src/input-control/styles/input-control-styles.tsx");const initialStateReducer=state=>state,initialInputControlState={error:null,initialValue:"",isDirty:!1,isDragEnabled:!1,isDragging:!1,isPressEnterToChange:!1,value:""};var actions=__webpack_require__("./packages/components/src/input-control/reducer/actions.ts");function useInputControlStateReducer(stateReducer=initialStateReducer,initialState=initialInputControlState,onChangeHandler){const[state,dispatch]=(0,react.useReducer)(function inputControlStateReducer(composedStateReducers){return(state,action)=>{const nextState={...state};switch(action.type){case actions.jx:return nextState.value=action.payload.value,nextState.isDirty=!1,nextState._event=void 0,nextState;case actions.Oh:case actions.LX:nextState.isDirty=!1;break;case actions.nv:nextState.isDragging=!0;break;case actions.Sv:nextState.isDragging=!1;break;case actions.Ve:nextState.error=null,nextState.value=action.payload.value,state.isPressEnterToChange&&(nextState.isDirty=!0);break;case actions.g:nextState.value=action.payload.value,nextState.isDirty=!1;break;case actions.td:nextState.error=null,nextState.isDirty=!1,nextState.value=action.payload.value||state.initialValue;break;case actions.WT:nextState.error=action.payload.error}return nextState._event=action.payload.event,composedStateReducers(nextState,action)}}(stateReducer),function mergeInitialState(initialState=initialInputControlState){const{value:value}=initialState;return{...initialInputControlState,...initialState,initialValue:value}}(initialState)),createChangeEvent=type=>(nextValue,event)=>{dispatch({type:type,payload:{value:nextValue,event:event}})},createKeyEvent=type=>event=>{dispatch({type:type,payload:{event:event}})},createDragEvent=type=>payload=>{dispatch({type:type,payload:payload})},change=createChangeEvent(actions.Ve),reset=createChangeEvent(actions.td),commit=createChangeEvent(actions.g),dragStart=createDragEvent(actions.nv),drag=createDragEvent(actions.Wp),dragEnd=createDragEvent(actions.Sv),pressUp=createKeyEvent(actions.Oh),pressDown=createKeyEvent(actions.LX),pressEnter=createKeyEvent(actions.Q4),currentState=(0,react.useRef)(state),refProps=(0,react.useRef)({value:initialState.value,onChangeHandler:onChangeHandler});return(0,react.useLayoutEffect)((()=>{currentState.current=state,refProps.current={value:initialState.value,onChangeHandler:onChangeHandler}})),(0,react.useLayoutEffect)((()=>{var _state$value;void 0===currentState.current._event||state.value===refProps.current.value||state.isDirty||refProps.current.onChangeHandler(null!==(_state$value=state.value)&&void 0!==_state$value?_state$value:"",{event:currentState.current._event})}),[state.value,state.isDirty]),(0,react.useLayoutEffect)((()=>{var _initialState$value;initialState.value===currentState.current.value||currentState.current.isDirty||dispatch({type:actions.jx,payload:{value:null!==(_initialState$value=initialState.value)&&void 0!==_initialState$value?_initialState$value:""}})}),[initialState.value]),{change:change,commit:commit,dispatch:dispatch,drag:drag,dragEnd:dragEnd,dragStart:dragStart,invalidate:(error,event)=>dispatch({type:actions.WT,payload:{error:error,event:event}}),pressDown:pressDown,pressEnter:pressEnter,pressUp:pressUp,reset:reset,state:state}}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const noop=()=>{};function InputField({disabled:disabled=!1,dragDirection:dragDirection="n",dragThreshold:dragThreshold=10,id:id,isDragEnabled:isDragEnabled=!1,isFocused:isFocused,isPressEnterToChange:isPressEnterToChange=!1,onBlur:onBlur=noop,onChange:onChange=noop,onDrag:onDrag=noop,onDragEnd:onDragEnd=noop,onDragStart:onDragStart=noop,onFocus:onFocus=noop,onKeyDown:onKeyDown=noop,onValidate:onValidate=noop,size:size="default",setIsFocused:setIsFocused,stateReducer:stateReducer=(state=>state),value:valueProp,type:type,...props},ref){const{state:state,change:change,commit:commit,drag:drag,dragEnd:dragEnd,dragStart:dragStart,invalidate:invalidate,pressDown:pressDown,pressEnter:pressEnter,pressUp:pressUp,reset:reset}=useInputControlStateReducer(stateReducer,{isDragEnabled:isDragEnabled,value:valueProp,isPressEnterToChange:isPressEnterToChange},onChange),{value:value,isDragging:isDragging,isDirty:isDirty}=state,wasDirtyOnBlur=(0,react.useRef)(!1),dragCursor=function useDragCursor(isDragging,dragDirection){const dragCursor=function getDragCursor(dragDirection){let dragCursor="ns-resize";switch(dragDirection){case"n":case"s":dragCursor="ns-resize";break;case"e":case"w":dragCursor="ew-resize"}return dragCursor}(dragDirection);return(0,react.useEffect)((()=>{document.documentElement.style.cursor=isDragging?dragCursor:null}),[isDragging,dragCursor]),dragCursor}(isDragging,dragDirection),handleOnCommit=event=>{const nextValue=event.currentTarget.value;try{onValidate(nextValue),commit(nextValue,event)}catch(err){invalidate(err,event)}},dragGestureProps=(0,use_gesture_react_esm.useDrag)((dragProps=>{const{distance:distance,dragging:dragging,event:event,target:target}=dragProps;if(dragProps.event={...dragProps.event,target:target},distance){if(event.stopPropagation(),!dragging)return onDragEnd(dragProps),void dragEnd(dragProps);onDrag(dragProps),drag(dragProps),isDragging||(onDragStart(dragProps),dragStart(dragProps))}}),{axis:"e"===dragDirection||"w"===dragDirection?"x":"y",threshold:dragThreshold,enabled:isDragEnabled,pointer:{capture:!1}}),dragProps=isDragEnabled?dragGestureProps():{};let handleOnMouseDown;return"number"===type&&(handleOnMouseDown=event=>{props.onMouseDown?.(event),event.currentTarget!==event.currentTarget.ownerDocument.activeElement&&event.currentTarget.focus()}),(0,jsx_runtime.jsx)(input_control_styles.II,{...props,...dragProps,className:"components-input-control__input",disabled:disabled,dragCursor:dragCursor,isDragging:isDragging,id:id,onBlur:event=>{onBlur(event),setIsFocused?.(!1),!isDirty&&event.target.validity.valid||(wasDirtyOnBlur.current=!0,handleOnCommit(event))},onChange:event=>{const nextValue=event.target.value;change(nextValue,event)},onFocus:event=>{onFocus(event),setIsFocused?.(!0)},onKeyDown:event=>{const{key:key}=event;switch(onKeyDown(event),key){case"ArrowUp":pressUp(event);break;case"ArrowDown":pressDown(event);break;case"Enter":pressEnter(event),isPressEnterToChange&&(event.preventDefault(),handleOnCommit(event));break;case"Escape":isPressEnterToChange&&isDirty&&(event.preventDefault(),reset(valueProp,event))}},onMouseDown:handleOnMouseDown,ref:ref,inputSize:size,value:null!=value?value:"",type:type})}InputField.displayName="InputField";var input_field=(0,react.forwardRef)(InputField);try{inputfield.displayName="inputfield",inputfield.__docgenInfo={description:"",displayName:"inputfield",props:{dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}},paddingInlineStart:{defaultValue:null,description:"",name:"paddingInlineStart",required:!1,type:{name:"PaddingInlineStart<string | number>"}},paddingInlineEnd:{defaultValue:null,description:"",name:"paddingInlineEnd",required:!1,type:{name:"PaddingInlineEnd<string | number>"}},setIsFocused:{defaultValue:null,description:"",name:"setIsFocused",required:!0,type:{name:"(isFocused: boolean) => void"}},stateReducer:{defaultValue:null,description:"",name:"stateReducer",required:!1,type:{name:"StateReducer"}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"__unstable-large"'}]}},isFocused:{defaultValue:{value:"false"},description:"Whether the component should be in a focused state.\nUsed to coordinate focus states when the actual focused element and the component handling\nvisual focus are separate.",name:"isFocused",required:!0,type:{name:"boolean"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"edge"'},{value:'"top"'},{value:'"side"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/input-field.tsx#inputfield"]={docgenInfo:inputfield.__docgenInfo,name:"inputfield",path:"packages/components/src/input-control/input-field.tsx#inputfield"})}catch(__react_docgen_typescript_loader_error){}var space=__webpack_require__("./packages/components/src/utils/space.ts"),base_control=__webpack_require__("./packages/components/src/base-control/index.tsx"),use_deprecated_props=__webpack_require__("./packages/components/src/utils/use-deprecated-props.ts");const input_control_noop=()=>{};function UnforwardedInputControl(props,ref){const{__next40pxDefaultSize:__next40pxDefaultSize,__unstableStateReducer:stateReducer=(state=>state),__unstableInputWidth:__unstableInputWidth,className:className,disabled:disabled=!1,help:help,hideLabelFromVision:hideLabelFromVision=!1,id:idProp,isPressEnterToChange:isPressEnterToChange=!1,label:label,labelPosition:labelPosition="top",onChange:onChange=input_control_noop,onValidate:onValidate=input_control_noop,onKeyDown:onKeyDown=input_control_noop,prefix:prefix,size:size="default",style:style,suffix:suffix,value:value,...restProps}=(0,use_deprecated_props.s)(props,"wp.components.InputControl","6.4"),[isFocused,setIsFocused]=(0,react.useState)(!1),id=function useUniqueId(idProp){const instanceId=(0,use_instance_id.Z)(InputControl);return idProp||`inspector-input-control-${instanceId}`}(idProp),classes=classnames_default()("components-input-control",className),draftHookProps=function useDraft(props){const refPreviousValue=(0,react.useRef)(props.value),[draft,setDraft]=(0,react.useState)({}),value=void 0!==draft.value?draft.value:props.value;return(0,react.useLayoutEffect)((()=>{const{current:previousValue}=refPreviousValue;refPreviousValue.current=props.value,void 0===draft.value||draft.isStale?draft.isStale&&props.value!==previousValue&&setDraft({}):setDraft({...draft,isStale:!0})}),[props.value,draft]),{value:value,onBlur:event=>{setDraft({}),props.onBlur?.(event)},onChange:(nextValue,extra)=>{setDraft((current=>Object.assign(current,{value:nextValue,isStale:!1}))),props.onChange(nextValue,extra)}}}({value:value,onBlur:restProps.onBlur,onChange:onChange}),helpProp=help?{["string"==typeof help?"aria-describedby":"aria-details"]:`${id}__help`}:{};return(0,jsx_runtime.jsx)(base_control.ZP,{className:classes,help:help,id:id,__nextHasNoMarginBottom:!0,children:(0,jsx_runtime.jsx)(input_base.Z,{__next40pxDefaultSize:__next40pxDefaultSize,__unstableInputWidth:__unstableInputWidth,disabled:disabled,gap:3,hideLabelFromVision:hideLabelFromVision,id:id,isFocused:isFocused,justify:"left",label:label,labelPosition:labelPosition,prefix:prefix,size:size,style:style,suffix:suffix,children:(0,jsx_runtime.jsx)(input_field,{...restProps,...helpProp,__next40pxDefaultSize:__next40pxDefaultSize,className:"components-input-control__input",disabled:disabled,id:id,isFocused:isFocused,isPressEnterToChange:isPressEnterToChange,onKeyDown:onKeyDown,onValidate:onValidate,paddingInlineStart:prefix?(0,space.D)(2):void 0,paddingInlineEnd:suffix?(0,space.D)(2):void 0,ref:ref,setIsFocused:setIsFocused,size:size,stateReducer:stateReducer,...draftHookProps})})})}UnforwardedInputControl.displayName="UnforwardedInputControl";const InputControl=(0,react.forwardRef)(UnforwardedInputControl);var input_control=InputControl;try{UnforwardedInputControl.displayName="UnforwardedInputControl",UnforwardedInputControl.__docgenInfo={description:"",displayName:"UnforwardedInputControl",props:{__unstableStateReducer:{defaultValue:null,description:"",name:"__unstableStateReducer",required:!1,type:{name:"StateReducer"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},prefix:{defaultValue:null,description:"Renders an element on the left side of the input.\n\nBy default, the prefix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlPrefixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlPrefixWrapper as InputControlPrefixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  prefix={<InputControlPrefixWrapper>@</InputControlPrefixWrapper>}\n/>",name:"prefix",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"__unstable-large"'}]}},suffix:{defaultValue:null,description:"Renders an element on the right side of the input.\n\nBy default, the suffix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlSuffixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlSuffixWrapper as InputControlSuffixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  suffix={<InputControlSuffixWrapper>%</InputControlSuffixWrapper>}\n/>",name:"suffix",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If true, the `input` will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},__next36pxDefaultSize:{defaultValue:{value:"false"},description:"Deprecated. Use `__next40pxDefaultSize` instead.\n@deprecated",name:"__next36pxDefaultSize",required:!1,type:{name:"boolean"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"edge"'},{value:'"top"'},{value:'"side"'}]}},help:{defaultValue:null,description:"Additional description for the control.\n\nIt is preferable to use plain text for `help`, as it can be accessibly associated with the control using `aria-describedby`.\nWhen the `help` contains links, or otherwise non-plain text content, it will be associated with the control using `aria-details`.",name:"help",required:!1,type:{name:"ReactNode"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/index.tsx#UnforwardedInputControl"]={docgenInfo:UnforwardedInputControl.__docgenInfo,name:"UnforwardedInputControl",path:"packages/components/src/input-control/index.tsx#UnforwardedInputControl"})}catch(__react_docgen_typescript_loader_error){}try{InputControl.displayName="InputControl",InputControl.__docgenInfo={description:"InputControl components let users enter and edit text. This is an experimental component\nintended to (in time) merge with or replace `TextControl`.\n\n```jsx\nimport { __experimentalInputControl as InputControl } from '@wordpress/components';\nimport { useState } from '@wordpress/compose';\n\nconst Example = () => {\n  const [ value, setValue ] = useState( '' );\n\n  return (\n \t<InputControl\n \t\tvalue={ value }\n \t\tonChange={ ( nextValue ) => setValue( nextValue ?? '' ) }\n \t/>\n  );\n};\n```",displayName:"InputControl",props:{__unstableStateReducer:{defaultValue:null,description:"",name:"__unstableStateReducer",required:!1,type:{name:"StateReducer"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},prefix:{defaultValue:null,description:"Renders an element on the left side of the input.\n\nBy default, the prefix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlPrefixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlPrefixWrapper as InputControlPrefixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  prefix={<InputControlPrefixWrapper>@</InputControlPrefixWrapper>}\n/>",name:"prefix",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"__unstable-large"'}]}},suffix:{defaultValue:null,description:"Renders an element on the right side of the input.\n\nBy default, the suffix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlSuffixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlSuffixWrapper as InputControlSuffixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  suffix={<InputControlSuffixWrapper>%</InputControlSuffixWrapper>}\n/>",name:"suffix",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If true, the `input` will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},__next36pxDefaultSize:{defaultValue:{value:"false"},description:"Deprecated. Use `__next40pxDefaultSize` instead.\n@deprecated",name:"__next36pxDefaultSize",required:!1,type:{name:"boolean"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"edge"'},{value:'"top"'},{value:'"side"'}]}},help:{defaultValue:null,description:"Additional description for the control.\n\nIt is preferable to use plain text for `help`, as it can be accessibly associated with the control using `aria-describedby`.\nWhen the `help` contains links, or otherwise non-plain text content, it will be associated with the control using `aria-details`.",name:"help",required:!1,type:{name:"ReactNode"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/index.tsx#InputControl"]={docgenInfo:InputControl.__docgenInfo,name:"InputControl",path:"packages/components/src/input-control/index.tsx#InputControl"})}catch(__react_docgen_typescript_loader_error){}try{inputcontrol.displayName="inputcontrol",inputcontrol.__docgenInfo={description:"InputControl components let users enter and edit text. This is an experimental component\nintended to (in time) merge with or replace `TextControl`.\n\n```jsx\nimport { __experimentalInputControl as InputControl } from '@wordpress/components';\nimport { useState } from '@wordpress/compose';\n\nconst Example = () => {\n  const [ value, setValue ] = useState( '' );\n\n  return (\n \t<InputControl\n \t\tvalue={ value }\n \t\tonChange={ ( nextValue ) => setValue( nextValue ?? '' ) }\n \t/>\n  );\n};\n```",displayName:"inputcontrol",props:{__unstableStateReducer:{defaultValue:null,description:"",name:"__unstableStateReducer",required:!1,type:{name:"StateReducer"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},prefix:{defaultValue:null,description:"Renders an element on the left side of the input.\n\nBy default, the prefix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlPrefixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlPrefixWrapper as InputControlPrefixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  prefix={<InputControlPrefixWrapper>@</InputControlPrefixWrapper>}\n/>",name:"prefix",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"__unstable-large"'}]}},suffix:{defaultValue:null,description:"Renders an element on the right side of the input.\n\nBy default, the suffix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlSuffixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlSuffixWrapper as InputControlSuffixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  suffix={<InputControlSuffixWrapper>%</InputControlSuffixWrapper>}\n/>",name:"suffix",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If true, the `input` will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},__next36pxDefaultSize:{defaultValue:{value:"false"},description:"Deprecated. Use `__next40pxDefaultSize` instead.\n@deprecated",name:"__next36pxDefaultSize",required:!1,type:{name:"boolean"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"edge"'},{value:'"top"'},{value:'"side"'}]}},help:{defaultValue:null,description:"Additional description for the control.\n\nIt is preferable to use plain text for `help`, as it can be accessibly associated with the control using `aria-describedby`.\nWhen the `help` contains links, or otherwise non-plain text content, it will be associated with the control using `aria-details`.",name:"help",required:!1,type:{name:"ReactNode"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/index.tsx#inputcontrol"]={docgenInfo:inputcontrol.__docgenInfo,name:"inputcontrol",path:"packages/components/src/input-control/index.tsx#inputcontrol"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/input-control/reducer/actions.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{LX:function(){return PRESS_DOWN},Oh:function(){return PRESS_UP},Q4:function(){return PRESS_ENTER},Sv:function(){return DRAG_END},Ve:function(){return CHANGE},WT:function(){return INVALIDATE},Wp:function(){return DRAG},g:function(){return COMMIT},jx:function(){return CONTROL},nv:function(){return DRAG_START},td:function(){return RESET}});const CHANGE="CHANGE",COMMIT="COMMIT",CONTROL="CONTROL",DRAG_END="DRAG_END",DRAG_START="DRAG_START",DRAG="DRAG",INVALIDATE="INVALIDATE",PRESS_DOWN="PRESS_DOWN",PRESS_ENTER="PRESS_ENTER",PRESS_UP="PRESS_UP",RESET="RESET"}}]);