{
  "version": 3,
  "sources": ["global-externals:@storybook/addons", "../../../../node_modules/storybook-source-link/dist/esm/constants.js", "global-externals:react", "global-externals:@storybook/components", "global-externals:@storybook/api", "../../../../node_modules/storybook-source-link/dist/esm/Tool.js", "../../../../node_modules/storybook-source-link/dist/esm/preset/manager.js"],
  "sourcesContent": ["export default __STORYBOOKADDONS__;\nconst { addons, types, mockChannel } = __STORYBOOKADDONS__;\nexport { addons, types, mockChannel };", "export var ADDON_ID = \"storybook/source-link\";\nexport var TOOL_ID = \"\".concat(ADDON_ID, \"/tool\");\nexport var PARAM_KEY = \"sourceLink\";\nexport var PREFIX_PARAM_KEY = \"sourceLinkPrefix\";\nexport var ICON_PARAM_KEY = \"sourceLinkIcon\";\nexport var INFO_LINK = \"https://github.com/Sirrine-Jonathan/storybook-source-link/blob/main/README.md\";", "export default __REACT__;\nconst { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version } = __REACT__;\nexport { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version };", "export default __STORYBOOKCOMPONENTS__;\nconst { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, ClipboardCode, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset } = __STORYBOOKCOMPONENTS__;\nexport { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, ClipboardCode, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset };", "export default __STORYBOOKAPI__;\nconst { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__;\nexport { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState };", "import React from \"react\";\nimport { Icons, IconButton, TooltipMessage, WithTooltip } from \"@storybook/components\";\nimport { PARAM_KEY, PREFIX_PARAM_KEY, ICON_PARAM_KEY, INFO_LINK, TOOL_ID } from \"./constants\";\nimport { useParameter } from '@storybook/api';\n\nvar Tooltip = function Tooltip() {\n  return /*#__PURE__*/React.createElement(TooltipMessage, {\n    title: \"Repository Link\",\n    desc: \"No repository link set in this story\",\n    links: [{\n      title: 'More Info',\n      onClick: function onClick() {\n        window.open(INFO_LINK);\n      }\n    }]\n  });\n};\n\nexport var getLink = function getLink(prefix, link) {\n  if (!link) return null;\n  if (prefix) link = \"\".concat(prefix).concat(link);\n  return link;\n};\nexport var Tool = function Tool() {\n  var param_link = useParameter(PARAM_KEY, null);\n  var param_prefix = useParameter(PREFIX_PARAM_KEY, null);\n  var param_icon = useParameter(ICON_PARAM_KEY, \"repository\");\n  var link = getLink(param_prefix, param_link);\n  return link ? /*#__PURE__*/React.createElement(IconButton, {\n    key: TOOL_ID,\n    title: \"View Source Repository: \".concat(link),\n    active: true,\n    onClick: function onClick() {\n      if (link) {\n        window.open(link);\n      }\n    }\n  }, /*#__PURE__*/React.createElement(Icons, {\n    icon: param_icon\n  })) : /*#__PURE__*/React.createElement(WithTooltip, {\n    placement: \"top\",\n    trigger: \"click\",\n    tooltip: /*#__PURE__*/React.createElement(Tooltip, null)\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    key: TOOL_ID,\n    title: \"View Source Repository\",\n    active: false\n  }, /*#__PURE__*/React.createElement(Icons, {\n    icon: param_icon\n  })));\n};", "import { addons, types } from \"@storybook/addons\";\nimport { ADDON_ID, TOOL_ID } from \"../constants\";\nimport { Tool } from \"../Tool\"; // Register the addon\n\naddons.register(ADDON_ID, function () {\n  // Register the tool\n  addons.add(TOOL_ID, {\n    type: types.TOOLEXTRA,\n    title: \"Source Link\",\n    match: function match(_ref) {\n      var viewMode = _ref.viewMode;\n      return !!(viewMode && viewMode.match(/^(story|docs)$/));\n    },\n    render: Tool\n  });\n});"],
  "mappings": "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",
  "names": ["addons_default", "addons", "types", "mockChannel", "ADDON_ID", "TOOL_ID", "PARAM_KEY", "PREFIX_PARAM_KEY", "ICON_PARAM_KEY", "INFO_LINK", "react_default", "Children", "Component", "Fragment", "Profiler", "PureComponent", "StrictMode", "Suspense", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "lazy", "memo", "useCallback", "useContext", "useDebugValue", "useEffect", "useImperativeHandle", "useLayoutEffect", "useMemo", "useReducer", "useRef", "useState", "version", "components_default", "A", "ActionBar", "AddonPanel", "Badge", "Bar", "Blockquote", "Button", "ClipboardCode", "Code", "DL", "Div", "DocumentWrapper", "ErrorFormatter", "FlexBar", "Form", "H1", "H2", "H3", "H4", "H5", "H6", "HR", "IconButton", "IconButtonSkeleton", "Icons", "Img", "LI", "Link", "ListItem", "Loader", "OL", "P", "Placeholder", "Pre", "ResetWrapper", "ScrollArea", "Separator", "Spaced", "Span", "StorybookIcon", "StorybookLogo", "Symbols", "SyntaxHighlighter", "TT", "TabBar", "TabButton", "TabWrapper", "Table", "Tabs", "TabsState", "TooltipLinkList", "TooltipMessage", "TooltipNote", "UL", "WithTooltip", "WithTooltipPure", "Zoom", "codeCommon", "components", "createCopyToClipboardFunction", "getStoryHref", "icons", "interleaveSeparators", "nameSpaceClassNames", "resetComponents", "withReset", "api_default", "ActiveTabs", "Consumer", "ManagerContext", "Provider", "addons", "combineParameters", "controlOrMetaKey", "controlOrMetaSymbol", "eventMatchesShortcut", "eventToShortcut", "isMacLike", "isShortcutTaken", "keyToSymbol", "merge", "mockChannel", "optionOrAltSymbol", "shortcutMatchesShortcut", "shortcutToHumanString", "types", "useAddonState", "useArgTypes", "useArgs", "useChannel", "useGlobalTypes", "useGlobals", "useParameter", "useSharedState", "useStoryPrepared", "useStorybookApi", "useStorybookState", "Tooltip", "react_default", "TooltipMessage", "INFO_LINK", "getLink", "prefix", "link", "Tool", "param_link", "useParameter", "PARAM_KEY", "param_prefix", "PREFIX_PARAM_KEY", "param_icon", "ICON_PARAM_KEY", "IconButton", "TOOL_ID", "Icons", "WithTooltip", "addons", "ADDON_ID", "TOOL_ID", "types", "_ref", "viewMode", "Tool"]
}
